{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-next-master/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/hexo-theme-next-master/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1553247065929},{"_id":"themes/hexo-theme-next-master/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1553247065930},{"_id":"themes/hexo-theme-next-master/.gitignore","hash":"de5b9b9e5b313b4a86e805b02f334d35c87bfe56","modified":1553247065933},{"_id":"themes/hexo-theme-next-master/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1553247065934},{"_id":"themes/hexo-theme-next-master/.javascript_ignore","hash":"74b54cf920cbbf4038a68e54b7138af8b8f45588","modified":1553247065935},{"_id":"themes/hexo-theme-next-master/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1553247065935},{"_id":"themes/hexo-theme-next-master/README.en.md","hash":"f947d9a552da869f0dbef140ceeeb7b040b0f4a4","modified":1553247065936},{"_id":"themes/hexo-theme-next-master/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1553247065938},{"_id":"themes/hexo-theme-next-master/_config.yml","hash":"00996940878d89c5b5a1167ceb622f9491d3260a","modified":1553247065939},{"_id":"themes/hexo-theme-next-master/bower.json","hash":"bd70cf5988bbfc8cbcf13adae659151a55466524","modified":1553247065939},{"_id":"themes/hexo-theme-next-master/gulpfile.coffee","hash":"e549561461642051d195550ec49d793e44ee22a0","modified":1553247065940},{"_id":"themes/hexo-theme-next-master/package.json","hash":"48e2352f8e41f2b6bbf55254d10f3192ee206d5a","modified":1553247066036},{"_id":"source/_posts/crawler.md","hash":"e4828a7f9f478f7481765333f3ad5b9389105bf3","modified":1553247065911},{"_id":"source/_posts/easyNodeImgServer.md","hash":"27159d9d649843c97d5bdc16cfd49eb2120521d4","modified":1553247065913},{"_id":"source/_posts/electron.md","hash":"bb7cb24b25c0f470b3926f29b2761cd448a469fc","modified":1553247065918},{"_id":"source/_posts/gulp.md","hash":"e1ee60260d5e04378d22fba68e0625246523f8ba","modified":1553247065921},{"_id":"source/_posts/uglify.md","hash":"d724928d48a9069ae726df6210a04c280d032f08","modified":1553247065922},{"_id":"source/categories/index.md","hash":"b642794ff73a58bbe5d85811f6f10e3987836872","modified":1553247065925},{"_id":"source/about/index.md","hash":"2f9cdde2a91d193fb148a396a2e5af15d070a1fe","modified":1553247065924},{"_id":"source/tags/index.md","hash":"5110b02c3de075058dab644233d1df4cdd97479d","modified":1553247065926},{"_id":"themes/hexo-theme-next-master/.github/CONTRIBUTING.md","hash":"4312fb37fa2b8663006be3c4fe01125ec01171c1","modified":1553247065931},{"_id":"themes/hexo-theme-next-master/.github/ISSUE_TEMPLATE.md","hash":"2692e36cc35b1594530981e7727771f601720a43","modified":1553247065932},{"_id":"themes/hexo-theme-next-master/languages/de.yml","hash":"db6a9d669f4b6282cda6c0a2d4e03d3e308a4846","modified":1553247065945},{"_id":"themes/hexo-theme-next-master/languages/default.yml","hash":"fe00529a94bb2550194a31d178f5810b45014ab6","modified":1553247065946},{"_id":"themes/hexo-theme-next-master/languages/en.yml","hash":"d02acdce503c86fbb01920ad22d31ec56fc285f1","modified":1553247065947},{"_id":"themes/hexo-theme-next-master/languages/fr-FR.yml","hash":"91cf55b9d75879e72c8008d2659fe2ea993a4cca","modified":1553247065948},{"_id":"themes/hexo-theme-next-master/languages/id.yml","hash":"d8b9dc017da0be7f71fda1cacd8064cbc38963b9","modified":1553247065950},{"_id":"themes/hexo-theme-next-master/languages/ja.yml","hash":"bc89436a2a015ef72f43f265e56e37d94e73c0cd","modified":1553247065951},{"_id":"themes/hexo-theme-next-master/languages/ko.yml","hash":"c59676f2af80c3c594c34c4a0fcbf65fd8864ff3","modified":1553247065952},{"_id":"themes/hexo-theme-next-master/languages/pt-BR.yml","hash":"4b91f96b07e05705b28964df7460466c9b522e2c","modified":1553247065953},{"_id":"themes/hexo-theme-next-master/languages/pt.yml","hash":"f364905121a816c9797acce07c0a4f248965b29a","modified":1553247065954},{"_id":"themes/hexo-theme-next-master/languages/ru.yml","hash":"402e676252ab1fc4522257a578738cb9536eb077","modified":1553247065955},{"_id":"themes/hexo-theme-next-master/languages/zh-Hans.yml","hash":"439c16c744b1596f24d9e0b4e230c4d3c93b7d85","modified":1553247065956},{"_id":"themes/hexo-theme-next-master/languages/zh-hk.yml","hash":"a59f3f3114f5eb4d170a76da4359307e8f5159a7","modified":1553247065957},{"_id":"themes/hexo-theme-next-master/languages/zh-tw.yml","hash":"18da1324d2212faca9a6e5e6ce98b419c86d4b0c","modified":1553247065958},{"_id":"themes/hexo-theme-next-master/layout/_layout.swig","hash":"24de463d28bacbf2a28c34fecf082980f7f33a12","modified":1553247065965},{"_id":"themes/hexo-theme-next-master/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1553247066029},{"_id":"themes/hexo-theme-next-master/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1553247066030},{"_id":"themes/hexo-theme-next-master/layout/index.swig","hash":"e5b52e04296203262a400e8e36ae12426d31fd5b","modified":1553247066031},{"_id":"themes/hexo-theme-next-master/layout/page.swig","hash":"2a13804aa186f6062738d136e430870c53789bf4","modified":1553247066032},{"_id":"themes/hexo-theme-next-master/layout/post.swig","hash":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1553247066033},{"_id":"themes/hexo-theme-next-master/layout/schedule.swig","hash":"595013860078799d455af4965b3a7c5c4fd3923c","modified":1553247066034},{"_id":"themes/hexo-theme-next-master/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1553247066035},{"_id":"themes/hexo-theme-next-master/scripts/merge-configs.js","hash":"f8cde6953939802f92da5b7a2458c6c539e9be69","modified":1553247066038},{"_id":"themes/hexo-theme-next-master/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1553247066244},{"_id":"themes/hexo-theme-next-master/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1553247066245},{"_id":"themes/hexo-theme-next-master/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1553247066246},{"_id":"themes/hexo-theme-next-master/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1553247066147},{"_id":"source/_posts/electron/tree.png","hash":"4fc152ab4649aa3ef837dc42405b05f09f324ce7","modified":1553247065920},{"_id":"themes/hexo-theme-next-master/hexo-site/source/favicon.ico","hash":"f7262c4da912c0dde16340430e71bb7892cae466","modified":1553247065943},{"_id":"themes/hexo-theme-next-master/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1553247065963},{"_id":"themes/hexo-theme-next-master/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1553247065964},{"_id":"themes/hexo-theme-next-master/layout/_macro/post-collapse.swig","hash":"6d40652784585d263c37b8a3723e43e04b926ca7","modified":1553247065966},{"_id":"themes/hexo-theme-next-master/layout/_macro/post.swig","hash":"216907a1348317114ccb90fecc752b8b7255b15b","modified":1553247065968},{"_id":"themes/hexo-theme-next-master/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1553247065970},{"_id":"themes/hexo-theme-next-master/layout/_macro/sidebar.swig","hash":"a42851e17d8961e5cae8b588d95a4a5456964972","modified":1553247065971},{"_id":"themes/hexo-theme-next-master/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1553247065972},{"_id":"themes/hexo-theme-next-master/layout/_partials/comments.swig","hash":"09da002fbeb0fe2ac3f180ecf77bce568ea989ca","modified":1553247065974},{"_id":"themes/hexo-theme-next-master/layout/_partials/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1553247065976},{"_id":"themes/hexo-theme-next-master/layout/_partials/footer.swig","hash":"683616f4a80796051e2346d80acf838a589450b0","modified":1553247065977},{"_id":"themes/hexo-theme-next-master/layout/_partials/head.swig","hash":"740684ef2b6e56183529387882042612e904bc8d","modified":1553247065978},{"_id":"themes/hexo-theme-next-master/layout/_partials/header.swig","hash":"8985089c950d6df0efab9cd549a6b9ee50708ee2","modified":1553247065983},{"_id":"themes/hexo-theme-next-master/layout/_partials/page-header.swig","hash":"dfbb6e9692333166aa78231ad12b2a40c153cbcb","modified":1553247065984},{"_id":"themes/hexo-theme-next-master/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1553247065985},{"_id":"themes/hexo-theme-next-master/layout/_partials/search.swig","hash":"952b7b8d9ce2c81d4002a9dc2331f1e710f99616","modified":1553247065986},{"_id":"themes/hexo-theme-next-master/layout/_scripts/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1553247065997},{"_id":"themes/hexo-theme-next-master/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1553247065998},{"_id":"themes/hexo-theme-next-master/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1553247065999},{"_id":"themes/hexo-theme-next-master/layout/_scripts/vendors.swig","hash":"e9beddda9758d8739c41fc8c67b2e72fc29c1244","modified":1553247066028},{"_id":"themes/hexo-theme-next-master/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1553247066039},{"_id":"themes/hexo-theme-next-master/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1553247066040},{"_id":"themes/hexo-theme-next-master/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1553247066042},{"_id":"themes/hexo-theme-next-master/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1553247066043},{"_id":"themes/hexo-theme-next-master/scripts/tags/note.js","hash":"7dc14db08f2c74f8f1952534b424f220f5c000c6","modified":1553247066044},{"_id":"themes/hexo-theme-next-master/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1553247066146},{"_id":"themes/hexo-theme-next-master/source/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1553247066149},{"_id":"themes/hexo-theme-next-master/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1553247066150},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1553247066152},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1553247066154},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1553247066154},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1553247066155},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1553247066156},{"_id":"themes/hexo-theme-next-master/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1553247066157},{"_id":"themes/hexo-theme-next-master/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1553247066158},{"_id":"themes/hexo-theme-next-master/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1553247066159},{"_id":"themes/hexo-theme-next-master/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1553247066159},{"_id":"themes/hexo-theme-next-master/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1553247066160},{"_id":"themes/hexo-theme-next-master/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1553247066161},{"_id":"themes/hexo-theme-next-master/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1553247066162},{"_id":"themes/hexo-theme-next-master/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1553247066003},{"_id":"themes/hexo-theme-next-master/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1553247066004},{"_id":"themes/hexo-theme-next-master/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1553247066113},{"_id":"themes/hexo-theme-next-master/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1553247066114},{"_id":"themes/hexo-theme-next-master/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1553247066117},{"_id":"themes/hexo-theme-next-master/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1553247066142},{"_id":"themes/hexo-theme-next-master/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1553247066145},{"_id":"themes/hexo-theme-next-master/source/images/avatar.jpg","hash":"fd243e0bd27d9b15e00739a419674d8a74dfd0bc","modified":1553247066151},{"_id":"themes/hexo-theme-next-master/layout/_components/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1553247065961},{"_id":"themes/hexo-theme-next-master/layout/_components/algolia-search/dom.swig","hash":"bb2c3a926bb7f8fea54d424882b25d93dfde7ae6","modified":1553247065961},{"_id":"themes/hexo-theme-next-master/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1553247065981},{"_id":"themes/hexo-theme-next-master/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1553247065982},{"_id":"themes/hexo-theme-next-master/layout/_partials/search/localsearch.swig","hash":"efa7efcbb575381b508f9aa0e0c53140eef72a7b","modified":1553247065988},{"_id":"themes/hexo-theme-next-master/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1553247065989},{"_id":"themes/hexo-theme-next-master/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1553247065990},{"_id":"themes/hexo-theme-next-master/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1553247065992},{"_id":"themes/hexo-theme-next-master/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1553247065993},{"_id":"themes/hexo-theme-next-master/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1553247065994},{"_id":"themes/hexo-theme-next-master/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1553247065995},{"_id":"themes/hexo-theme-next-master/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1553247066001},{"_id":"themes/hexo-theme-next-master/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1553247066005},{"_id":"themes/hexo-theme-next-master/layout/_scripts/third-party/analytics.swig","hash":"188423f7df0eb8c99a03cb6741384415651c4665","modified":1553247066007},{"_id":"themes/hexo-theme-next-master/layout/_scripts/third-party/comments.swig","hash":"4f9efb15c9aaa016ac78d9f8aa2caefea87869df","modified":1553247066017},{"_id":"themes/hexo-theme-next-master/layout/_scripts/third-party/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1553247066023},{"_id":"themes/hexo-theme-next-master/layout/_scripts/third-party/localsearch.swig","hash":"f592adff22628b271ec9657b080cf6b9cc200615","modified":1553247066024},{"_id":"themes/hexo-theme-next-master/layout/_scripts/third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1553247066025},{"_id":"themes/hexo-theme-next-master/layout/_scripts/third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1553247066026},{"_id":"themes/hexo-theme-next-master/layout/_scripts/third-party/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1553247066027},{"_id":"themes/hexo-theme-next-master/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1553247066112},{"_id":"themes/hexo-theme-next-master/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1553247066116},{"_id":"themes/hexo-theme-next-master/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1553247066115},{"_id":"themes/hexo-theme-next-master/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1553247066142},{"_id":"themes/hexo-theme-next-master/source/css/_variables/Pisces.styl","hash":"c666e352c3b8e4ad0a16cc757b08f44ef9172182","modified":1553247066144},{"_id":"themes/hexo-theme-next-master/source/css/_variables/base.styl","hash":"8b08a5ce4222aa731b180a12127bd0e52d12ede8","modified":1553247066145},{"_id":"themes/hexo-theme-next-master/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1553247066164},{"_id":"themes/hexo-theme-next-master/source/js/src/algolia-search.js","hash":"84bdc8a4fe127849a5c99bdefe1d0b65ee1a4a0a","modified":1553247066164},{"_id":"themes/hexo-theme-next-master/source/js/src/bootstrap.js","hash":"4a0da1bed19e65bd7db42421b447061bc1618710","modified":1553247066165},{"_id":"themes/hexo-theme-next-master/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1553247066166},{"_id":"themes/hexo-theme-next-master/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1553247066167},{"_id":"themes/hexo-theme-next-master/source/js/src/post-details.js","hash":"458af3b1bd7783c1950808e66cedfa9fb68bf21f","modified":1553247066168},{"_id":"themes/hexo-theme-next-master/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1553247066170},{"_id":"themes/hexo-theme-next-master/source/js/src/utils.js","hash":"e34f83848883732ddd7a34a3e3ed2a293f0f76a7","modified":1553247066171},{"_id":"themes/hexo-theme-next-master/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1553247066173},{"_id":"themes/hexo-theme-next-master/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1553247066178},{"_id":"themes/hexo-theme-next-master/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1553247066197},{"_id":"themes/hexo-theme-next-master/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1553247066199},{"_id":"themes/hexo-theme-next-master/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1553247066199},{"_id":"themes/hexo-theme-next-master/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1553247066200},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/.bower.json","hash":"8868275e8b6340c87a81c69a54ed138d11fb3c3e","modified":1553247066204},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1553247066205},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1553247066206},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1553247066206},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1553247066207},{"_id":"themes/hexo-theme-next-master/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1553247066225},{"_id":"themes/hexo-theme-next-master/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1553247066227},{"_id":"themes/hexo-theme-next-master/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1553247066228},{"_id":"themes/hexo-theme-next-master/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1553247066229},{"_id":"themes/hexo-theme-next-master/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1553247066230},{"_id":"themes/hexo-theme-next-master/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1553247066232},{"_id":"themes/hexo-theme-next-master/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1553247066233},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1553247066236},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1553247066237},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1553247066241},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1553247066242},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1553247066243},{"_id":"source/_posts/easyNodeImgServer/http.jpg","hash":"42285d87a069627d6c09858bab136ce43b2087b5","modified":1553247065917},{"_id":"themes/hexo-theme-next-master/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1553247066226},{"_id":"themes/hexo-theme-next-master/layout/_scripts/third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1553247066009},{"_id":"themes/hexo-theme-next-master/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1553247066011},{"_id":"themes/hexo-theme-next-master/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"24105e62d7f26946907fa14cd02589f899bf8122","modified":1553247066012},{"_id":"themes/hexo-theme-next-master/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1553247066013},{"_id":"themes/hexo-theme-next-master/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1553247066014},{"_id":"themes/hexo-theme-next-master/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1553247066015},{"_id":"themes/hexo-theme-next-master/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1553247066016},{"_id":"themes/hexo-theme-next-master/layout/_scripts/third-party/comments/disqus.swig","hash":"e4a13e8cd19762ef3aea0e59dfae8b3c1f251f11","modified":1553247066019},{"_id":"themes/hexo-theme-next-master/layout/_scripts/third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1553247066019},{"_id":"themes/hexo-theme-next-master/layout/_scripts/third-party/comments/gentie.swig","hash":"0f38f053841ef77cdce56a84cfbb4dd4c3329486","modified":1553247066020},{"_id":"themes/hexo-theme-next-master/layout/_scripts/third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1553247066021},{"_id":"themes/hexo-theme-next-master/layout/_scripts/third-party/comments/youyan.swig","hash":"f40a697fd046415924a142eec1effad70f3cb187","modified":1553247066022},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1553247066105},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/back-to-top.styl","hash":"ad69cbf94eedacc27e756cdb9c7073416db697d0","modified":1553247066047},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1553247066048},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1553247066049},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/components.styl","hash":"b7d5cc29586ac796a50d90974ad99d24a5982137","modified":1553247066050},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1553247066068},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1553247066090},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/base.styl","hash":"5a35aa0381b0e1d465b952a997194441020446ea","modified":1553247066107},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/helpers.styl","hash":"b6ee5fefa6046086a76ddbcfafc82482816fa3e0","modified":1553247066108},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1553247066109},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1553247066110},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1553247066110},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1553247066119},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1553247066119},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1553247066120},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1553247066121},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1553247066123},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/_posts-expanded.styl","hash":"ce272226a1570f5f7c70243b751a5b0fe1671a88","modified":1553247066122},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1553247066124},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1553247066129},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1553247066131},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1553247066130},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1553247066132},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1553247066133},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/_brand.styl","hash":"34acb45007229b299951ce35d8eef642ea16fbe9","modified":1553247066136},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/_layout.styl","hash":"221d3dbc04ff6c211ba9382397c4977e9f493153","modified":1553247066137},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/_menu.styl","hash":"173f3aa31c41782591b7abeadd4f88f68d59b042","modified":1553247066137},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1553247066138},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/_sidebar.styl","hash":"1be4ef3f97f329e2531bfd2dfdc40c0e46df35c8","modified":1553247066139},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1553247066140},{"_id":"themes/hexo-theme-next-master/source/js/src/schemes/pisces.js","hash":"c2390263a298a2b78c5f941e6827c13f02e1ee85","modified":1553247066169},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1553247066179},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1553247066181},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1553247066180},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1553247066182},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1553247066182},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1553247066183},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1553247066190},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1553247066195},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1553247066196},{"_id":"themes/hexo-theme-next-master/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1553247066202},{"_id":"themes/hexo-theme-next-master/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1553247066203},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/css/font-awesome.css","hash":"a02674d823c7b577d38c3cdb91953993b6e4b3a0","modified":1553247066209},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1553247066210},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/css/font-awesome.min.css","hash":"3c1d63dd1176c77f9f4cdb1616fbb08c31b9822f","modified":1553247066211},{"_id":"themes/hexo-theme-next-master/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1553247066235},{"_id":"themes/hexo-theme-next-master/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1553247066235},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1553247066223},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1553247066224},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1553247066240},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1553247066054},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1553247066052},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1553247066055},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/header/menu.styl","hash":"852fd77500bda2c1a6651a14aa48d7d6222adc9d","modified":1553247066055},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1553247066057},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1553247066058},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1553247066060},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/highlight/highlight.styl","hash":"cd2def16d31feb234be27dcdce2a919f70cc6919","modified":1553247066061},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1553247066062},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1553247066063},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1553247066064},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1553247066065},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1553247066066},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1553247066067},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-button.styl","hash":"0d9a4ae2e4ab418453e0f81b8fb1ad4b856f91d4","modified":1553247066069},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1553247066070},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1553247066071},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-expand.styl","hash":"4866fb9453d7d4c83a1c4e55d74e4afed336eb8b","modified":1553247066072},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1553247066073},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-meta.styl","hash":"e28c805011f65b54060f03be90ec5a23714c4985","modified":1553247066074},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-nav.styl","hash":"74e9989a10fc682388cbd25ff7df0d7d4025fb8c","modified":1553247066075},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1553247066076},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1553247066077},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1553247066078},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1553247066078},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post.styl","hash":"011d5828b4972b2df0b429794b4466ba5bc1b49e","modified":1553247066079},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1553247066081},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1553247066082},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"821991c0890966a512b43e8b1cf9537e738a09a0","modified":1553247066083},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1553247066084},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1553247066085},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1553247066086},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"06b9a99d63b4d57fdbf70b88ab7036fbc47e3f52","modified":1553247066087},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1553247066088},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1553247066089},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1553247066091},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1553247066092},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1553247066094},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/tags/note.styl","hash":"8420b4be386469337243336aee694297875bd439","modified":1553247066095},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/tags/tags.styl","hash":"c8a05ce90784db9744c22fab22019eb637df1f2f","modified":1553247066096},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/algolia-search.styl","hash":"3b1aabbab57b0b1fafa311feb1212f59e78e7928","modified":1553247066097},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1553247066098},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"7f7e9df15148608a9c29326dd880d8e8e8efc0ec","modified":1553247066099},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1553247066100},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/gentie.styl","hash":"cd526e814f9323a79fe835085d64867d34b3715d","modified":1553247066101},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1553247066102},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/localsearch.styl","hash":"eb4ede7d7446d8a2f2ddeef3b17f497a6ad30756","modified":1553247066103},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/third-party.styl","hash":"dc944a01dd59f5ed2d44bb22fdb21fc3f455948f","modified":1553247066104},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1553247066126},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1553247066127},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1553247066134},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1553247066185},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1553247066185},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1553247066187},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1553247066187},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1553247066188},{"_id":"themes/hexo-theme-next-master/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1553247066189},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1553247066213},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1553247066214},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1553247066221},{"_id":"themes/hexo-theme-next-master/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1553247066176},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"964e8dac2cee79c4b49b5bc300675773f6518812","modified":1553247066218}],"Category":[{"name":"node编程","_id":"cjtjvp8wb0004nwwf3zfxh40s"},{"name":"打包","_id":"cjtjvp8ws000gnwwfaerf6la9"}],"Data":[],"Page":[{"title":"分类列表","date":"2017-01-12T08:25:01.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类列表\ndate: 2017-01-12 16:25:01\ntype: \"categories\"\ncomments: false\n---\n","updated":"2019-03-22T09:31:05.925Z","path":"categories/index.html","layout":"page","_id":"cjtjvp8w30001nwwft7y5yppz","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2017-01-12T08:08:41.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-01-12 16:08:41\n---\n","updated":"2019-03-22T09:31:05.924Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjtjvp8w90003nwwfemaa9bo8","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签列表","date":"2017-01-12T07:58:34.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签列表\ndate: 2017-01-12 15:58:34\ntype: \"tags\"\ncomments: false\n---\n","updated":"2019-03-22T09:31:05.926Z","path":"tags/index.html","layout":"page","_id":"cjtjvp8wf0007nwwfoktrbzzx","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"爬虫简单示例","date":"2017-01-12T08:17:48.000Z","_content":"```\n/*\n *   one:\n *  目标站点:动脑论坛\n *  目标数据:会员名\n *   two:\n *  目标站点:起点小说\n *  目标数据:玄幻小说\n *  three: \n *  目标站点:http://www.mm131.com/\n *  目标数据:美女图片 \n *  作者:yao\n *  时间:2017.1.11\n */\n\nvar cheerio = require('cheerio');\nvar request = require('request');\nvar fs = require('fs');\nvar mkdirp = require('mkdirp')\n\n\n// charpter one 抓取会员名, output: name.txt\nrequest('http://101.200.129.112:4567/users/latest', function(error, response, body) {\n    if (!error && response.statusCode == 200) {\n        var $ = cheerio.load(body);\n        var items = $('#users-container .user-info a');\n        var names = [];\n        items.each(function() {\n            names.push($(this).text());\n        })\n        fs.writeFile('name.txt', names.join(','));\n        console.log('会员名抓取完毕');\n    }\n})\n\n// charpter two 抓取小说, output: xiaoshuo.txt\nfunction getContent(url) {\n    request(url, function(error, response, body) {\n        if (!error && response.statusCode == 200) {\n            var $ = cheerio.load(body);\n            var str = '';\n            var next = $('#j_chapterNext').attr('href');\n            next = 'http:' + next;\n            str += $('.read-content').text();\n            fs.appendFile('xiaoshuo.txt', str);\n            getContent(next);\n        } else {\n            console.log('抓取完毕');\n        }\n    })\n}\nvar url = 'http://read.qidian.com/chapter/OOqJX-uOLbLmkXioLmMPXw2/fwup5h1VDGlMs5iq0oQwLQ2';\ngetContent(url);\n\n\n//创建目录\nmkdirp('./images', function(err) {\n    if(err){\n        console.log(err);\n    }\n});\n// charpter three 抓取美女图片,output:images文件夹\nfunction getImages(url, base) {\n    request(url, function(error, response, body) {\n        if (!error && response.statusCode == 200) {\n            var $ = cheerio.load(body);\n            var items = $('.public-box dd a img');\n            var $next = $('.page-en').eq(-2);\n            nextUrl = base + $next.attr('href');\n            items.each(function() {\n                var src = $(this).attr('src');\n                if (/pic/.test(src) > 0) {\n                    download(src, './images', Math.floor(Math.random() * 1000000000) + src.split('/').pop());\n                    console.log('正在下载' + src);\n                }\n            })\n            if (isNaN($next.text())) {\n                getImages(nextUrl, base);\n            } else {\n                console.log('抓取完毕');\n            }\n        }\n    })\n}\n\nfunction download(url, dir, filename) {\n    request.head(url, function(err, res, body) {\n        request(url).pipe(fs.createWriteStream(dir + '/' + filename));\n    })\n}\n\ngetImages('http://www.mm131.com/qingchun/', 'http://www.mm131.com/qingchun/');\n\n```","source":"_posts/crawler.md","raw":"---\ntitle: 爬虫简单示例\ndate: 2017-01-12 16:17:48\ncategories: node编程\ntags: 爬虫\n---\n```\n/*\n *   one:\n *  目标站点:动脑论坛\n *  目标数据:会员名\n *   two:\n *  目标站点:起点小说\n *  目标数据:玄幻小说\n *  three: \n *  目标站点:http://www.mm131.com/\n *  目标数据:美女图片 \n *  作者:yao\n *  时间:2017.1.11\n */\n\nvar cheerio = require('cheerio');\nvar request = require('request');\nvar fs = require('fs');\nvar mkdirp = require('mkdirp')\n\n\n// charpter one 抓取会员名, output: name.txt\nrequest('http://101.200.129.112:4567/users/latest', function(error, response, body) {\n    if (!error && response.statusCode == 200) {\n        var $ = cheerio.load(body);\n        var items = $('#users-container .user-info a');\n        var names = [];\n        items.each(function() {\n            names.push($(this).text());\n        })\n        fs.writeFile('name.txt', names.join(','));\n        console.log('会员名抓取完毕');\n    }\n})\n\n// charpter two 抓取小说, output: xiaoshuo.txt\nfunction getContent(url) {\n    request(url, function(error, response, body) {\n        if (!error && response.statusCode == 200) {\n            var $ = cheerio.load(body);\n            var str = '';\n            var next = $('#j_chapterNext').attr('href');\n            next = 'http:' + next;\n            str += $('.read-content').text();\n            fs.appendFile('xiaoshuo.txt', str);\n            getContent(next);\n        } else {\n            console.log('抓取完毕');\n        }\n    })\n}\nvar url = 'http://read.qidian.com/chapter/OOqJX-uOLbLmkXioLmMPXw2/fwup5h1VDGlMs5iq0oQwLQ2';\ngetContent(url);\n\n\n//创建目录\nmkdirp('./images', function(err) {\n    if(err){\n        console.log(err);\n    }\n});\n// charpter three 抓取美女图片,output:images文件夹\nfunction getImages(url, base) {\n    request(url, function(error, response, body) {\n        if (!error && response.statusCode == 200) {\n            var $ = cheerio.load(body);\n            var items = $('.public-box dd a img');\n            var $next = $('.page-en').eq(-2);\n            nextUrl = base + $next.attr('href');\n            items.each(function() {\n                var src = $(this).attr('src');\n                if (/pic/.test(src) > 0) {\n                    download(src, './images', Math.floor(Math.random() * 1000000000) + src.split('/').pop());\n                    console.log('正在下载' + src);\n                }\n            })\n            if (isNaN($next.text())) {\n                getImages(nextUrl, base);\n            } else {\n                console.log('抓取完毕');\n            }\n        }\n    })\n}\n\nfunction download(url, dir, filename) {\n    request.head(url, function(err, res, body) {\n        request(url).pipe(fs.createWriteStream(dir + '/' + filename));\n    })\n}\n\ngetImages('http://www.mm131.com/qingchun/', 'http://www.mm131.com/qingchun/');\n\n```","slug":"crawler","published":1,"updated":"2019-03-22T09:31:05.911Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtjvp8vx0000nwwfcqq5zjea","content":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> *   one:</span></span><br><span class=\"line\"><span class=\"comment\"> *  目标站点:动脑论坛</span></span><br><span class=\"line\"><span class=\"comment\"> *  目标数据:会员名</span></span><br><span class=\"line\"><span class=\"comment\"> *   two:</span></span><br><span class=\"line\"><span class=\"comment\"> *  目标站点:起点小说</span></span><br><span class=\"line\"><span class=\"comment\"> *  目标数据:玄幻小说</span></span><br><span class=\"line\"><span class=\"comment\"> *  three: </span></span><br><span class=\"line\"><span class=\"comment\"> *  目标站点:http://www.mm131.com/</span></span><br><span class=\"line\"><span class=\"comment\"> *  目标数据:美女图片 </span></span><br><span class=\"line\"><span class=\"comment\"> *  作者:yao</span></span><br><span class=\"line\"><span class=\"comment\"> *  时间:2017.1.11</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> cheerio = <span class=\"built_in\">require</span>(<span class=\"string\">'cheerio'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> request = <span class=\"built_in\">require</span>(<span class=\"string\">'request'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> mkdirp = <span class=\"built_in\">require</span>(<span class=\"string\">'mkdirp'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// charpter one 抓取会员名, output: name.txt</span></span><br><span class=\"line\">request(<span class=\"string\">'http://101.200.129.112:4567/users/latest'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode == <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> $ = cheerio.load(body);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> items = $(<span class=\"string\">'#users-container .user-info a'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> names = [];</span><br><span class=\"line\">        items.each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            names.push($(<span class=\"keyword\">this</span>).text());</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        fs.writeFile(<span class=\"string\">'name.txt'</span>, names.join(<span class=\"string\">','</span>));</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'会员名抓取完毕'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// charpter two 抓取小说, output: xiaoshuo.txt</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getContent</span>(<span class=\"params\">url</span>) </span>&#123;</span><br><span class=\"line\">    request(url, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode == <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> $ = cheerio.load(body);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> str = <span class=\"string\">''</span>;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> next = $(<span class=\"string\">'#j_chapterNext'</span>).attr(<span class=\"string\">'href'</span>);</span><br><span class=\"line\">            next = <span class=\"string\">'http:'</span> + next;</span><br><span class=\"line\">            str += $(<span class=\"string\">'.read-content'</span>).text();</span><br><span class=\"line\">            fs.appendFile(<span class=\"string\">'xiaoshuo.txt'</span>, str);</span><br><span class=\"line\">            getContent(next);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'抓取完毕'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> url = <span class=\"string\">'http://read.qidian.com/chapter/OOqJX-uOLbLmkXioLmMPXw2/fwup5h1VDGlMs5iq0oQwLQ2'</span>;</span><br><span class=\"line\">getContent(url);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建目录</span></span><br><span class=\"line\">mkdirp(<span class=\"string\">'./images'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(err)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// charpter three 抓取美女图片,output:images文件夹</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getImages</span>(<span class=\"params\">url, base</span>) </span>&#123;</span><br><span class=\"line\">    request(url, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode == <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> $ = cheerio.load(body);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> items = $(<span class=\"string\">'.public-box dd a img'</span>);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> $next = $(<span class=\"string\">'.page-en'</span>).eq(<span class=\"number\">-2</span>);</span><br><span class=\"line\">            nextUrl = base + $next.attr(<span class=\"string\">'href'</span>);</span><br><span class=\"line\">            items.each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> src = $(<span class=\"keyword\">this</span>).attr(<span class=\"string\">'src'</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"regexp\">/pic/</span>.test(src) &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    download(src, <span class=\"string\">'./images'</span>, <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">1000000000</span>) + src.split(<span class=\"string\">'/'</span>).pop());</span><br><span class=\"line\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">'正在下载'</span> + src);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">isNaN</span>($next.text())) &#123;</span><br><span class=\"line\">                getImages(nextUrl, base);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">'抓取完毕'</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">download</span>(<span class=\"params\">url, dir, filename</span>) </span>&#123;</span><br><span class=\"line\">    request.head(url, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, res, body</span>) </span>&#123;</span><br><span class=\"line\">        request(url).pipe(fs.createWriteStream(dir + <span class=\"string\">'/'</span> + filename));</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">getImages(<span class=\"string\">'http://www.mm131.com/qingchun/'</span>, <span class=\"string\">'http://www.mm131.com/qingchun/'</span>);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> *   one:</span></span><br><span class=\"line\"><span class=\"comment\"> *  目标站点:动脑论坛</span></span><br><span class=\"line\"><span class=\"comment\"> *  目标数据:会员名</span></span><br><span class=\"line\"><span class=\"comment\"> *   two:</span></span><br><span class=\"line\"><span class=\"comment\"> *  目标站点:起点小说</span></span><br><span class=\"line\"><span class=\"comment\"> *  目标数据:玄幻小说</span></span><br><span class=\"line\"><span class=\"comment\"> *  three: </span></span><br><span class=\"line\"><span class=\"comment\"> *  目标站点:http://www.mm131.com/</span></span><br><span class=\"line\"><span class=\"comment\"> *  目标数据:美女图片 </span></span><br><span class=\"line\"><span class=\"comment\"> *  作者:yao</span></span><br><span class=\"line\"><span class=\"comment\"> *  时间:2017.1.11</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> cheerio = <span class=\"built_in\">require</span>(<span class=\"string\">'cheerio'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> request = <span class=\"built_in\">require</span>(<span class=\"string\">'request'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> mkdirp = <span class=\"built_in\">require</span>(<span class=\"string\">'mkdirp'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// charpter one 抓取会员名, output: name.txt</span></span><br><span class=\"line\">request(<span class=\"string\">'http://101.200.129.112:4567/users/latest'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode == <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> $ = cheerio.load(body);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> items = $(<span class=\"string\">'#users-container .user-info a'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> names = [];</span><br><span class=\"line\">        items.each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            names.push($(<span class=\"keyword\">this</span>).text());</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        fs.writeFile(<span class=\"string\">'name.txt'</span>, names.join(<span class=\"string\">','</span>));</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'会员名抓取完毕'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// charpter two 抓取小说, output: xiaoshuo.txt</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getContent</span>(<span class=\"params\">url</span>) </span>&#123;</span><br><span class=\"line\">    request(url, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode == <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> $ = cheerio.load(body);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> str = <span class=\"string\">''</span>;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> next = $(<span class=\"string\">'#j_chapterNext'</span>).attr(<span class=\"string\">'href'</span>);</span><br><span class=\"line\">            next = <span class=\"string\">'http:'</span> + next;</span><br><span class=\"line\">            str += $(<span class=\"string\">'.read-content'</span>).text();</span><br><span class=\"line\">            fs.appendFile(<span class=\"string\">'xiaoshuo.txt'</span>, str);</span><br><span class=\"line\">            getContent(next);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'抓取完毕'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> url = <span class=\"string\">'http://read.qidian.com/chapter/OOqJX-uOLbLmkXioLmMPXw2/fwup5h1VDGlMs5iq0oQwLQ2'</span>;</span><br><span class=\"line\">getContent(url);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建目录</span></span><br><span class=\"line\">mkdirp(<span class=\"string\">'./images'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(err)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// charpter three 抓取美女图片,output:images文件夹</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getImages</span>(<span class=\"params\">url, base</span>) </span>&#123;</span><br><span class=\"line\">    request(url, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode == <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> $ = cheerio.load(body);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> items = $(<span class=\"string\">'.public-box dd a img'</span>);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> $next = $(<span class=\"string\">'.page-en'</span>).eq(<span class=\"number\">-2</span>);</span><br><span class=\"line\">            nextUrl = base + $next.attr(<span class=\"string\">'href'</span>);</span><br><span class=\"line\">            items.each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> src = $(<span class=\"keyword\">this</span>).attr(<span class=\"string\">'src'</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"regexp\">/pic/</span>.test(src) &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    download(src, <span class=\"string\">'./images'</span>, <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">1000000000</span>) + src.split(<span class=\"string\">'/'</span>).pop());</span><br><span class=\"line\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">'正在下载'</span> + src);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">isNaN</span>($next.text())) &#123;</span><br><span class=\"line\">                getImages(nextUrl, base);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">'抓取完毕'</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">download</span>(<span class=\"params\">url, dir, filename</span>) </span>&#123;</span><br><span class=\"line\">    request.head(url, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, res, body</span>) </span>&#123;</span><br><span class=\"line\">        request(url).pipe(fs.createWriteStream(dir + <span class=\"string\">'/'</span> + filename));</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">getImages(<span class=\"string\">'http://www.mm131.com/qingchun/'</span>, <span class=\"string\">'http://www.mm131.com/qingchun/'</span>);</span><br></pre></td></tr></table></figure>"},{"title":"Node图片服务器的简易实现","date":"2017-01-12T08:18:49.000Z","_content":"# http商业服务器遵循的原则\n高扩展,低耦合\n{% asset_img http.jpg 商业服务器 %}\n\n[demo下载](https://github.com/yaotiancheng123456/demo)\n\n## Quick Start\n\n```\n\"安装formidable模块\"\n\nnpm install formidable --save-dev\n\n```\n### 创建一个入口文件 index.js\n\n```\nvar server=require('./server.js');\n\nserver.start();  \n\n```\n### 创建文件 server.js,创键服务器\n\n```\nvar http = require('http');\nvar router=require('./router.js');\n\nfunction start(){\n    function onRequest(request,response){\n        router.route(request,response);\n    }\n\n    http.createServer(function(request,response){\n        onRequest(request,response);\n    }).listen(8080,function(){\n        console.log('server start on port 8080');\n    });\n}\n\nexports.start=start;\n\n```\n\n### 创键文件route.js，负责路由分发\n\n```\n    var requestHandler = require('./requestHandler.js');\n    var url = require('url');\n    var handle = requestHandler.handle;\n\n    function route(request, response) {\n        var pathname = url.parse(request.url).pathname;\n        if (typeof(handle[pathname]) === 'function') {\n            console.log('recieve a handle ' + pathname);\n            handle[pathname](request, response);\n        } else {\n            response.writeHead(404, {\n                'content-type': 'text/plain'\n            });\n            response.write('Not Found');\n            response.end();\n        }\n    }\n    exports.route = route;\n\n```\n### 创键文件requestHandler.js,集中管理相关操作\n\n```\nvar startHandler=require('./startHandler');\nvar uploadHandler=require('./uploadHandler');\nvar showHandler=require('./showHandler');\nvar handle={};\nhandle['/']=startHandler.start;\nhandle['/upload']=uploadHandler.upload;\nhandle['/show']=showHandler.show;\nexports.handle=handle;\n\n```\n\n### 创键startHandler.js,具体负责start路由下，服务器的操作\n\n```\nvar fs=require('fs');\n\nfunction start(request,response){\n    var body=fs.readFileSync('./post.html');\n    response.writeHead(200,{\n        'content-type':'text/html'\n    });\n    response.write(body);\n    response.end();\n}\n\nexports.start=start;\n\n```\n\n### 创键uploadHandler.js,具体负责上传路由,服务器的操作\n\n```\nvar formidable = require('formidable');\nvar fs=require('fs');\n\nfunction upload(request, response) {\n    var form = new formidable.IncomingForm();\n    form.uploadDir='pubilc/upload/';\n    form.parse(request, function(err, fields, files) {\n        fs.renameSync(files.myFile.path,'tmp/test.png');\n        response.writeHead(200, {\n            'content-type': 'text/html'\n        });\n        response.write('received upload:<br/>');\n        response.write('<img src=\"/show\"/>');\n        response.end();\n    });\n}\n\nexports.upload = upload;\n\n```\n### 创键showHandler.js,负责显示图片\n\n```\nvar fs = require('fs');\n\nfunction show(request, response) {\n    fs.readFile('tmp/test.png', 'binary', function(error, file) {\n        if (error) {\n            response.writeHead(500, {\n                'content-type': 'text/plain'\n            });\n            console.log(error);\n            response.write('500 服务器内部错误');\n            response.end();\n        } else {\n            response.writeHead(200, {\n                'content-type': 'image/png'\n            });\n            response.write(file, \"binary\");\n            response.end();\n        }\n    })\n}\nexports.show = show;\n\n```\n","source":"_posts/easyNodeImgServer.md","raw":"---\ntitle: Node图片服务器的简易实现\ndate: 2017-01-12 16:18:49\ncategories: node编程\ntags: 服务器\n---\n# http商业服务器遵循的原则\n高扩展,低耦合\n{% asset_img http.jpg 商业服务器 %}\n\n[demo下载](https://github.com/yaotiancheng123456/demo)\n\n## Quick Start\n\n```\n\"安装formidable模块\"\n\nnpm install formidable --save-dev\n\n```\n### 创建一个入口文件 index.js\n\n```\nvar server=require('./server.js');\n\nserver.start();  \n\n```\n### 创建文件 server.js,创键服务器\n\n```\nvar http = require('http');\nvar router=require('./router.js');\n\nfunction start(){\n    function onRequest(request,response){\n        router.route(request,response);\n    }\n\n    http.createServer(function(request,response){\n        onRequest(request,response);\n    }).listen(8080,function(){\n        console.log('server start on port 8080');\n    });\n}\n\nexports.start=start;\n\n```\n\n### 创键文件route.js，负责路由分发\n\n```\n    var requestHandler = require('./requestHandler.js');\n    var url = require('url');\n    var handle = requestHandler.handle;\n\n    function route(request, response) {\n        var pathname = url.parse(request.url).pathname;\n        if (typeof(handle[pathname]) === 'function') {\n            console.log('recieve a handle ' + pathname);\n            handle[pathname](request, response);\n        } else {\n            response.writeHead(404, {\n                'content-type': 'text/plain'\n            });\n            response.write('Not Found');\n            response.end();\n        }\n    }\n    exports.route = route;\n\n```\n### 创键文件requestHandler.js,集中管理相关操作\n\n```\nvar startHandler=require('./startHandler');\nvar uploadHandler=require('./uploadHandler');\nvar showHandler=require('./showHandler');\nvar handle={};\nhandle['/']=startHandler.start;\nhandle['/upload']=uploadHandler.upload;\nhandle['/show']=showHandler.show;\nexports.handle=handle;\n\n```\n\n### 创键startHandler.js,具体负责start路由下，服务器的操作\n\n```\nvar fs=require('fs');\n\nfunction start(request,response){\n    var body=fs.readFileSync('./post.html');\n    response.writeHead(200,{\n        'content-type':'text/html'\n    });\n    response.write(body);\n    response.end();\n}\n\nexports.start=start;\n\n```\n\n### 创键uploadHandler.js,具体负责上传路由,服务器的操作\n\n```\nvar formidable = require('formidable');\nvar fs=require('fs');\n\nfunction upload(request, response) {\n    var form = new formidable.IncomingForm();\n    form.uploadDir='pubilc/upload/';\n    form.parse(request, function(err, fields, files) {\n        fs.renameSync(files.myFile.path,'tmp/test.png');\n        response.writeHead(200, {\n            'content-type': 'text/html'\n        });\n        response.write('received upload:<br/>');\n        response.write('<img src=\"/show\"/>');\n        response.end();\n    });\n}\n\nexports.upload = upload;\n\n```\n### 创键showHandler.js,负责显示图片\n\n```\nvar fs = require('fs');\n\nfunction show(request, response) {\n    fs.readFile('tmp/test.png', 'binary', function(error, file) {\n        if (error) {\n            response.writeHead(500, {\n                'content-type': 'text/plain'\n            });\n            console.log(error);\n            response.write('500 服务器内部错误');\n            response.end();\n        } else {\n            response.writeHead(200, {\n                'content-type': 'image/png'\n            });\n            response.write(file, \"binary\");\n            response.end();\n        }\n    })\n}\nexports.show = show;\n\n```\n","slug":"easyNodeImgServer","published":1,"updated":"2019-03-22T09:31:05.913Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtjvp8w70002nwwfx2qe1j8w","content":"<h1 id=\"http商业服务器遵循的原则\"><a href=\"#http商业服务器遵循的原则\" class=\"headerlink\" title=\"http商业服务器遵循的原则\"></a>http商业服务器遵循的原则</h1><p>高扩展,低耦合<br><img src=\"/2017/01/12/easyNodeImgServer/http.jpg\" title=\"商业服务器\"></p>\n<p><a href=\"https://github.com/yaotiancheng123456/demo\" target=\"_blank\" rel=\"noopener\">demo下载</a></p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"安装formidable模块\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">npm install formidable --<span class=\"built_in\">save</span>-<span class=\"built_in\">dev</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"创建一个入口文件-index-js\"><a href=\"#创建一个入口文件-index-js\" class=\"headerlink\" title=\"创建一个入口文件 index.js\"></a>创建一个入口文件 index.js</h3><figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var <span class=\"keyword\">server</span>=require(<span class=\"string\">'./server.js'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">server</span>.start();</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建文件-server-js-创键服务器\"><a href=\"#创建文件-server-js-创键服务器\" class=\"headerlink\" title=\"创建文件 server.js,创键服务器\"></a>创建文件 server.js,创键服务器</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">'http'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> router=<span class=\"built_in\">require</span>(<span class=\"string\">'./router.js'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">start</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">onRequest</span>(<span class=\"params\">request,response</span>)</span>&#123;</span><br><span class=\"line\">        router.route(request,response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    http.createServer(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">request,response</span>)</span>&#123;</span><br><span class=\"line\">        onRequest(request,response);</span><br><span class=\"line\">    &#125;).listen(<span class=\"number\">8080</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'server start on port 8080'</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exports.start=start;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创键文件route-js，负责路由分发\"><a href=\"#创键文件route-js，负责路由分发\" class=\"headerlink\" title=\"创键文件route.js，负责路由分发\"></a>创键文件route.js，负责路由分发</h3><figure class=\"highlight qml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> requestHandler = <span class=\"built_in\">require</span>(<span class=\"string\">'./requestHandler.js'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"built_in\">url</span> = <span class=\"built_in\">require</span>(<span class=\"string\">'url'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> handle = requestHandler.handle;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">route</span>(<span class=\"params\">request, response</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> pathname = <span class=\"built_in\">url</span>.parse(request.url).pathname;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span>(handle[pathname]) === <span class=\"string\">'function'</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'recieve a handle '</span> + pathname);</span><br><span class=\"line\">        handle[pathname](request, response);</span><br><span class=\"line\">    &#125; <span class=\"title\">else</span> &#123;</span><br><span class=\"line\">        response.writeHead(<span class=\"number\">404</span>, &#123;</span><br><span class=\"line\">            <span class=\"string\">'content-type'</span>: <span class=\"string\">'text/plain'</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        response.write(<span class=\"string\">'Not Found'</span>);</span><br><span class=\"line\">        response.end();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">exports.route = route;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创键文件requestHandler-js-集中管理相关操作\"><a href=\"#创键文件requestHandler-js-集中管理相关操作\" class=\"headerlink\" title=\"创键文件requestHandler.js,集中管理相关操作\"></a>创键文件requestHandler.js,集中管理相关操作</h3><figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">var</span> startHandler=<span class=\"keyword\">require</span>(<span class=\"string\">'./startHandler'</span>);</span><br><span class=\"line\"><span class=\"built_in\">var</span> uploadHandler=<span class=\"keyword\">require</span>(<span class=\"string\">'./uploadHandler'</span>);</span><br><span class=\"line\"><span class=\"built_in\">var</span> showHandler=<span class=\"keyword\">require</span>(<span class=\"string\">'./showHandler'</span>);</span><br><span class=\"line\"><span class=\"built_in\">var</span> <span class=\"keyword\">handle</span>=&#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">handle</span><span class=\"meta\">[</span><span class=\"string\">'/'</span><span class=\"meta\">]</span>=startHandler.start;</span><br><span class=\"line\">handle<span class=\"meta\">[</span><span class=\"string\">'/upload'</span><span class=\"meta\">]</span>=uploadHandler.upload;</span><br><span class=\"line\">handle<span class=\"meta\">[</span><span class=\"string\">'/show'</span><span class=\"meta\">]</span>=showHandler.show;</span><br><span class=\"line\">exports.handle=handle;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创键startHandler-js-具体负责start路由下，服务器的操作\"><a href=\"#创键startHandler-js-具体负责start路由下，服务器的操作\" class=\"headerlink\" title=\"创键startHandler.js,具体负责start路由下，服务器的操作\"></a>创键startHandler.js,具体负责start路由下，服务器的操作</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs=<span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">start</span>(<span class=\"params\">request,response</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> body=fs.readFileSync(<span class=\"string\">'./post.html'</span>);</span><br><span class=\"line\">    response.writeHead(<span class=\"number\">200</span>,&#123;</span><br><span class=\"line\">        <span class=\"string\">'content-type'</span>:<span class=\"string\">'text/html'</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    response.write(body);</span><br><span class=\"line\">    response.end();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exports.start=start;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创键uploadHandler-js-具体负责上传路由-服务器的操作\"><a href=\"#创键uploadHandler-js-具体负责上传路由-服务器的操作\" class=\"headerlink\" title=\"创键uploadHandler.js,具体负责上传路由,服务器的操作\"></a>创键uploadHandler.js,具体负责上传路由,服务器的操作</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> formidable = <span class=\"built_in\">require</span>(<span class=\"string\">'formidable'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> fs=<span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">upload</span>(<span class=\"params\">request, response</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> form = <span class=\"keyword\">new</span> formidable.IncomingForm();</span><br><span class=\"line\">    form.uploadDir=<span class=\"string\">'pubilc/upload/'</span>;</span><br><span class=\"line\">    form.parse(request, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, fields, files</span>) </span>&#123;</span><br><span class=\"line\">        fs.renameSync(files.myFile.path,<span class=\"string\">'tmp/test.png'</span>);</span><br><span class=\"line\">        response.writeHead(<span class=\"number\">200</span>, &#123;</span><br><span class=\"line\">            <span class=\"string\">'content-type'</span>: <span class=\"string\">'text/html'</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        response.write(<span class=\"string\">'received upload:&lt;br/&gt;'</span>);</span><br><span class=\"line\">        response.write(<span class=\"string\">'&lt;img src=\"/show\"/&gt;'</span>);</span><br><span class=\"line\">        response.end();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exports.upload = upload;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创键showHandler-js-负责显示图片\"><a href=\"#创键showHandler-js-负责显示图片\" class=\"headerlink\" title=\"创键showHandler.js,负责显示图片\"></a>创键showHandler.js,负责显示图片</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">show</span><span class=\"params\">(request, response)</span></span> &#123;</span><br><span class=\"line\">    fs.readFile(<span class=\"string\">'tmp/test.png'</span>, <span class=\"string\">'binary'</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(error, file)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">error</span>) &#123;</span><br><span class=\"line\">            response.writeHead(<span class=\"number\">500</span>, &#123;</span><br><span class=\"line\">                <span class=\"string\">'content-type'</span>: <span class=\"string\">'text/plain'</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            console.<span class=\"built_in\">log</span>(<span class=\"built_in\">error</span>);</span><br><span class=\"line\">            response.<span class=\"built_in\">write</span>(<span class=\"string\">'500 服务器内部错误'</span>);</span><br><span class=\"line\">            response.<span class=\"keyword\">end</span>();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            response.writeHead(<span class=\"number\">200</span>, &#123;</span><br><span class=\"line\">                <span class=\"string\">'content-type'</span>: <span class=\"string\">'image/png'</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            response.<span class=\"built_in\">write</span>(file, <span class=\"string\">\"binary\"</span>);</span><br><span class=\"line\">            response.<span class=\"keyword\">end</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">exports.show = show;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"http商业服务器遵循的原则\"><a href=\"#http商业服务器遵循的原则\" class=\"headerlink\" title=\"http商业服务器遵循的原则\"></a>http商业服务器遵循的原则</h1><p>高扩展,低耦合<br><img src=\"/2017/01/12/easyNodeImgServer/http.jpg\" title=\"商业服务器\"></p>\n<p><a href=\"https://github.com/yaotiancheng123456/demo\" target=\"_blank\" rel=\"noopener\">demo下载</a></p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"安装formidable模块\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">npm install formidable --<span class=\"built_in\">save</span>-<span class=\"built_in\">dev</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"创建一个入口文件-index-js\"><a href=\"#创建一个入口文件-index-js\" class=\"headerlink\" title=\"创建一个入口文件 index.js\"></a>创建一个入口文件 index.js</h3><figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var <span class=\"keyword\">server</span>=require(<span class=\"string\">'./server.js'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">server</span>.start();</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建文件-server-js-创键服务器\"><a href=\"#创建文件-server-js-创键服务器\" class=\"headerlink\" title=\"创建文件 server.js,创键服务器\"></a>创建文件 server.js,创键服务器</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">'http'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> router=<span class=\"built_in\">require</span>(<span class=\"string\">'./router.js'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">start</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">onRequest</span>(<span class=\"params\">request,response</span>)</span>&#123;</span><br><span class=\"line\">        router.route(request,response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    http.createServer(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">request,response</span>)</span>&#123;</span><br><span class=\"line\">        onRequest(request,response);</span><br><span class=\"line\">    &#125;).listen(<span class=\"number\">8080</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'server start on port 8080'</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exports.start=start;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创键文件route-js，负责路由分发\"><a href=\"#创键文件route-js，负责路由分发\" class=\"headerlink\" title=\"创键文件route.js，负责路由分发\"></a>创键文件route.js，负责路由分发</h3><figure class=\"highlight qml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> requestHandler = <span class=\"built_in\">require</span>(<span class=\"string\">'./requestHandler.js'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"built_in\">url</span> = <span class=\"built_in\">require</span>(<span class=\"string\">'url'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> handle = requestHandler.handle;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">route</span>(<span class=\"params\">request, response</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> pathname = <span class=\"built_in\">url</span>.parse(request.url).pathname;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span>(handle[pathname]) === <span class=\"string\">'function'</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'recieve a handle '</span> + pathname);</span><br><span class=\"line\">        handle[pathname](request, response);</span><br><span class=\"line\">    &#125; <span class=\"title\">else</span> &#123;</span><br><span class=\"line\">        response.writeHead(<span class=\"number\">404</span>, &#123;</span><br><span class=\"line\">            <span class=\"string\">'content-type'</span>: <span class=\"string\">'text/plain'</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        response.write(<span class=\"string\">'Not Found'</span>);</span><br><span class=\"line\">        response.end();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">exports.route = route;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创键文件requestHandler-js-集中管理相关操作\"><a href=\"#创键文件requestHandler-js-集中管理相关操作\" class=\"headerlink\" title=\"创键文件requestHandler.js,集中管理相关操作\"></a>创键文件requestHandler.js,集中管理相关操作</h3><figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">var</span> startHandler=<span class=\"keyword\">require</span>(<span class=\"string\">'./startHandler'</span>);</span><br><span class=\"line\"><span class=\"built_in\">var</span> uploadHandler=<span class=\"keyword\">require</span>(<span class=\"string\">'./uploadHandler'</span>);</span><br><span class=\"line\"><span class=\"built_in\">var</span> showHandler=<span class=\"keyword\">require</span>(<span class=\"string\">'./showHandler'</span>);</span><br><span class=\"line\"><span class=\"built_in\">var</span> <span class=\"keyword\">handle</span>=&#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">handle</span><span class=\"meta\">[</span><span class=\"string\">'/'</span><span class=\"meta\">]</span>=startHandler.start;</span><br><span class=\"line\">handle<span class=\"meta\">[</span><span class=\"string\">'/upload'</span><span class=\"meta\">]</span>=uploadHandler.upload;</span><br><span class=\"line\">handle<span class=\"meta\">[</span><span class=\"string\">'/show'</span><span class=\"meta\">]</span>=showHandler.show;</span><br><span class=\"line\">exports.handle=handle;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创键startHandler-js-具体负责start路由下，服务器的操作\"><a href=\"#创键startHandler-js-具体负责start路由下，服务器的操作\" class=\"headerlink\" title=\"创键startHandler.js,具体负责start路由下，服务器的操作\"></a>创键startHandler.js,具体负责start路由下，服务器的操作</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs=<span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">start</span>(<span class=\"params\">request,response</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> body=fs.readFileSync(<span class=\"string\">'./post.html'</span>);</span><br><span class=\"line\">    response.writeHead(<span class=\"number\">200</span>,&#123;</span><br><span class=\"line\">        <span class=\"string\">'content-type'</span>:<span class=\"string\">'text/html'</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    response.write(body);</span><br><span class=\"line\">    response.end();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exports.start=start;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创键uploadHandler-js-具体负责上传路由-服务器的操作\"><a href=\"#创键uploadHandler-js-具体负责上传路由-服务器的操作\" class=\"headerlink\" title=\"创键uploadHandler.js,具体负责上传路由,服务器的操作\"></a>创键uploadHandler.js,具体负责上传路由,服务器的操作</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> formidable = <span class=\"built_in\">require</span>(<span class=\"string\">'formidable'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> fs=<span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">upload</span>(<span class=\"params\">request, response</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> form = <span class=\"keyword\">new</span> formidable.IncomingForm();</span><br><span class=\"line\">    form.uploadDir=<span class=\"string\">'pubilc/upload/'</span>;</span><br><span class=\"line\">    form.parse(request, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, fields, files</span>) </span>&#123;</span><br><span class=\"line\">        fs.renameSync(files.myFile.path,<span class=\"string\">'tmp/test.png'</span>);</span><br><span class=\"line\">        response.writeHead(<span class=\"number\">200</span>, &#123;</span><br><span class=\"line\">            <span class=\"string\">'content-type'</span>: <span class=\"string\">'text/html'</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        response.write(<span class=\"string\">'received upload:&lt;br/&gt;'</span>);</span><br><span class=\"line\">        response.write(<span class=\"string\">'&lt;img src=\"/show\"/&gt;'</span>);</span><br><span class=\"line\">        response.end();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exports.upload = upload;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创键showHandler-js-负责显示图片\"><a href=\"#创键showHandler-js-负责显示图片\" class=\"headerlink\" title=\"创键showHandler.js,负责显示图片\"></a>创键showHandler.js,负责显示图片</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">show</span><span class=\"params\">(request, response)</span></span> &#123;</span><br><span class=\"line\">    fs.readFile(<span class=\"string\">'tmp/test.png'</span>, <span class=\"string\">'binary'</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(error, file)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">error</span>) &#123;</span><br><span class=\"line\">            response.writeHead(<span class=\"number\">500</span>, &#123;</span><br><span class=\"line\">                <span class=\"string\">'content-type'</span>: <span class=\"string\">'text/plain'</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            console.<span class=\"built_in\">log</span>(<span class=\"built_in\">error</span>);</span><br><span class=\"line\">            response.<span class=\"built_in\">write</span>(<span class=\"string\">'500 服务器内部错误'</span>);</span><br><span class=\"line\">            response.<span class=\"keyword\">end</span>();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            response.writeHead(<span class=\"number\">200</span>, &#123;</span><br><span class=\"line\">                <span class=\"string\">'content-type'</span>: <span class=\"string\">'image/png'</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            response.<span class=\"built_in\">write</span>(file, <span class=\"string\">\"binary\"</span>);</span><br><span class=\"line\">            response.<span class=\"keyword\">end</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">exports.show = show;</span><br></pre></td></tr></table></figure>\n"},{"title":"Node构建桌面应用教程","date":"2017-01-13T09:30:20.000Z","_content":"\n{% blockquote %}\n    Electron 提供了一个实时构建桌面应用的纯 JavaScript 环境。Electron 可以获取到你定义在 package.json 中 main 文件内容，然后执行它。通过这个文件（通常我们称之为main.js），可以创建一个应用窗口，这个应用窗口包含一个渲染好的 web 界面，还可以和系统原生的 GUI 交互。\n{% endblockquote%}\n\n\n{% blockquote %}\n    直接启动main.js是无法显示应用窗口的,在main.js调用BrowserWindow模块才能使用窗口。每个窗口都将执行属于自己的渲染进程。渲染进程处理的是一个正真的web页面\"HTML+CSS+JavaScript\"。前端人员也可以用web的形式开发桌面应用啦。\n{% endblockquote %}\n\n{% asset_img tree.png electron工作示意图%}\n\n# 开始electron编程\n## 目录结构\n\n{% blockquote %}\n    * app 项目目录\n        * index.js index页面的渲染进程\n        * list.js  list页面的渲染进程\n        * statics  静态资源目录\n    * main.js 主进程\n    * package.json \n{% endblockquote %}\n\n## 在项目文件夹中建造package.json文件，内容如下\n```\n    {\n        \"name\": \"yao\",\n        \"version\": \"0.1.0\",\n        \"main\": \"./main.js\",\n        \"scripts\": {\n            \"start\": \"electron .\"\n        }\n    }\n\n```\n\n## 安装electron\n```\n    npm install --save-dev electron\n\n```\n## 创建入口程序main.js\n\n### 引入项目依赖，ES6写法\n{% blockquote %}\n   BrowserWindow管理窗口,子窗口可以向ipcMain发送事件，达到窗口间通信的效果\n{% endblockquote %}\n\n```\n    const {app, BrowserWindow , ipcMain} = require('electron')\n    const path = require('path')\n    const url = require('url')\n    //窗口全局变量\n    let win\n\n```\n\n### 创建主窗口\n\n```\n   function createWindow () {\n     // 创建窗口\n     win = new BrowserWindow({width: 800, height: 600})\n\n     // 加载本地app的html\n     win.loadURL(url.format({\n       pathname: path.join(__dirname, 'index.html'),\n       protocol: 'file:',\n       slashes: true\n     }))\n\n     // 打开控制台\n     win.webContents.openDevTools()\n\n     // 绑定函数，当窗口关闭时触发\n     win.on('closed', () => {\n       win = null\n     })\n   }\n\n```\n\n### 绑定事件\n\n```\n    //当app加载完即启用回调函数\n    app.on('ready', createWindow)\n\n    //当所有窗口关闭启用回调函数\n    app.on('window-all-closed', () => {\n      if (process.platform !== 'darwin') {\n        app.quit()\n      }\n    })\n\n    //当app活跃时，启动回调\n    app.on('activate', () => {\n      if (win === null) {\n        createWindow()\n      }\n    })\n\n\n```\n## 创建页面\n\n### index.html\n\n```\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <meta charset=\"UTF-8\">\n        <title>gulp打包</title>\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"statics/styles/reset.css\">\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"statics/styles/index.css\">\n      </head>\n      <body>\n      <h1>hello word</h1>\n      <button>open list</button>\n      </body>\n      <script>\n        //加载jquery\n        window.$ = window.jQuery = require('./statics/scripts/jquery-1.11.2.min.js');\n      </script>\n      <script>\n        // 加载管理自己渲染进程的js\n        require('./index.js')\n      </script>\n    </html>\n\n```\n### list.html\n\n```\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <title>List消息列表</title>\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"statics/styles/reset.css\">\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"statics/styles/list.css\">\n    </head>\n    <body>\n        <div class=\"list_content\">\n           <span></span>\n        </div>\n    </body>\n    <script>\n        //加载jquery\n        window.$ = window.jQuery = require('./statics/scripts/jquery-1.11.2.min.js');\n    </script>\n    <script>\n        //家贼管理自己渲染进程的js \n        require('./list.js')\n    </script>\n    </html>\n\n```\n\n\n# electron页面之间的消息传递\n\n## index.js\n\n``` \n    const {\n        ipcRenderer\n    } = require('electron');\n\n    var msg='i am yao'\n\n    // 点击按钮,打开List列表\n    // 向主进程传递open-list-window事件\n    $('button').on('click', () => {\n        ipcRenderer.send('open-list-window', msg);\n    })\n\n```\n\n## main.js添加事件监听 open-list-window事件\n```\n    //子窗口\n    let listWindow\n\n    //监听渲染进程发过来的事件，执行回调 ,子窗口被打开\n\n    ipcMain.on('open-list-window', (event, arg) => {\n      if (listWindow) {\n        return;\n      }\n      listWindow = new BrowserWindow({\n        height: 500,\n        width: 500,\n        resizable: false\n      })\n      listWindow.loadURL(url.format({\n        pathname: path.join(__dirname, 'app/list.html'),\n        protocol: 'file:',\n        slashes: true\n      }))\n      listWindow.webContents.openDevTools();\n      listWindow.on('closed', () => {\n        listWindow = null;\n      })\n    })\n\n```\n## list.js添加事件监听 hello事件\n```\n    //子窗口发送消息给主进程\n\n    const {ipcRenderer}=require('electron');\n\n    ipcRenderer.send('hello','i am 子窗口')\n\n```\n## main.js添加代码\n\n```\n    ipcMain.on('hello', (event, arg) => {\n        console.log(arg)\n    })\n\n```\n{% blockquote %}\n   控制台最后打印出i am 子窗口。\n{% endblockquote %}\n\n# electron展望\n\n{% blockquote %}\n   electron主进程可以执行node的exec模块，调用系统命令,可以通过web页面构建良好的用户交互体验，通过点击按钮，执行一些系统命令。\n\n   比如: 建造一个项目， 利用localstorage去记录文件，选择项目文件，复制改文件到app中的source中，安装依赖，执行app里面的打包脚本，最后输出到文件目录中dist处。可以构建一个类似weflow的打包桌面应用。\n\n   目前正在进行中,敬请期待。\n{% endblockquote %}","source":"_posts/electron.md","raw":"---\ntitle: \"Node构建桌面应用教程\"\ndate: 2017-01-13 17:30:20\ncategories: node编程\ntags: 桌面应用\n---\n\n{% blockquote %}\n    Electron 提供了一个实时构建桌面应用的纯 JavaScript 环境。Electron 可以获取到你定义在 package.json 中 main 文件内容，然后执行它。通过这个文件（通常我们称之为main.js），可以创建一个应用窗口，这个应用窗口包含一个渲染好的 web 界面，还可以和系统原生的 GUI 交互。\n{% endblockquote%}\n\n\n{% blockquote %}\n    直接启动main.js是无法显示应用窗口的,在main.js调用BrowserWindow模块才能使用窗口。每个窗口都将执行属于自己的渲染进程。渲染进程处理的是一个正真的web页面\"HTML+CSS+JavaScript\"。前端人员也可以用web的形式开发桌面应用啦。\n{% endblockquote %}\n\n{% asset_img tree.png electron工作示意图%}\n\n# 开始electron编程\n## 目录结构\n\n{% blockquote %}\n    * app 项目目录\n        * index.js index页面的渲染进程\n        * list.js  list页面的渲染进程\n        * statics  静态资源目录\n    * main.js 主进程\n    * package.json \n{% endblockquote %}\n\n## 在项目文件夹中建造package.json文件，内容如下\n```\n    {\n        \"name\": \"yao\",\n        \"version\": \"0.1.0\",\n        \"main\": \"./main.js\",\n        \"scripts\": {\n            \"start\": \"electron .\"\n        }\n    }\n\n```\n\n## 安装electron\n```\n    npm install --save-dev electron\n\n```\n## 创建入口程序main.js\n\n### 引入项目依赖，ES6写法\n{% blockquote %}\n   BrowserWindow管理窗口,子窗口可以向ipcMain发送事件，达到窗口间通信的效果\n{% endblockquote %}\n\n```\n    const {app, BrowserWindow , ipcMain} = require('electron')\n    const path = require('path')\n    const url = require('url')\n    //窗口全局变量\n    let win\n\n```\n\n### 创建主窗口\n\n```\n   function createWindow () {\n     // 创建窗口\n     win = new BrowserWindow({width: 800, height: 600})\n\n     // 加载本地app的html\n     win.loadURL(url.format({\n       pathname: path.join(__dirname, 'index.html'),\n       protocol: 'file:',\n       slashes: true\n     }))\n\n     // 打开控制台\n     win.webContents.openDevTools()\n\n     // 绑定函数，当窗口关闭时触发\n     win.on('closed', () => {\n       win = null\n     })\n   }\n\n```\n\n### 绑定事件\n\n```\n    //当app加载完即启用回调函数\n    app.on('ready', createWindow)\n\n    //当所有窗口关闭启用回调函数\n    app.on('window-all-closed', () => {\n      if (process.platform !== 'darwin') {\n        app.quit()\n      }\n    })\n\n    //当app活跃时，启动回调\n    app.on('activate', () => {\n      if (win === null) {\n        createWindow()\n      }\n    })\n\n\n```\n## 创建页面\n\n### index.html\n\n```\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <meta charset=\"UTF-8\">\n        <title>gulp打包</title>\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"statics/styles/reset.css\">\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"statics/styles/index.css\">\n      </head>\n      <body>\n      <h1>hello word</h1>\n      <button>open list</button>\n      </body>\n      <script>\n        //加载jquery\n        window.$ = window.jQuery = require('./statics/scripts/jquery-1.11.2.min.js');\n      </script>\n      <script>\n        // 加载管理自己渲染进程的js\n        require('./index.js')\n      </script>\n    </html>\n\n```\n### list.html\n\n```\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <title>List消息列表</title>\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"statics/styles/reset.css\">\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"statics/styles/list.css\">\n    </head>\n    <body>\n        <div class=\"list_content\">\n           <span></span>\n        </div>\n    </body>\n    <script>\n        //加载jquery\n        window.$ = window.jQuery = require('./statics/scripts/jquery-1.11.2.min.js');\n    </script>\n    <script>\n        //家贼管理自己渲染进程的js \n        require('./list.js')\n    </script>\n    </html>\n\n```\n\n\n# electron页面之间的消息传递\n\n## index.js\n\n``` \n    const {\n        ipcRenderer\n    } = require('electron');\n\n    var msg='i am yao'\n\n    // 点击按钮,打开List列表\n    // 向主进程传递open-list-window事件\n    $('button').on('click', () => {\n        ipcRenderer.send('open-list-window', msg);\n    })\n\n```\n\n## main.js添加事件监听 open-list-window事件\n```\n    //子窗口\n    let listWindow\n\n    //监听渲染进程发过来的事件，执行回调 ,子窗口被打开\n\n    ipcMain.on('open-list-window', (event, arg) => {\n      if (listWindow) {\n        return;\n      }\n      listWindow = new BrowserWindow({\n        height: 500,\n        width: 500,\n        resizable: false\n      })\n      listWindow.loadURL(url.format({\n        pathname: path.join(__dirname, 'app/list.html'),\n        protocol: 'file:',\n        slashes: true\n      }))\n      listWindow.webContents.openDevTools();\n      listWindow.on('closed', () => {\n        listWindow = null;\n      })\n    })\n\n```\n## list.js添加事件监听 hello事件\n```\n    //子窗口发送消息给主进程\n\n    const {ipcRenderer}=require('electron');\n\n    ipcRenderer.send('hello','i am 子窗口')\n\n```\n## main.js添加代码\n\n```\n    ipcMain.on('hello', (event, arg) => {\n        console.log(arg)\n    })\n\n```\n{% blockquote %}\n   控制台最后打印出i am 子窗口。\n{% endblockquote %}\n\n# electron展望\n\n{% blockquote %}\n   electron主进程可以执行node的exec模块，调用系统命令,可以通过web页面构建良好的用户交互体验，通过点击按钮，执行一些系统命令。\n\n   比如: 建造一个项目， 利用localstorage去记录文件，选择项目文件，复制改文件到app中的source中，安装依赖，执行app里面的打包脚本，最后输出到文件目录中dist处。可以构建一个类似weflow的打包桌面应用。\n\n   目前正在进行中,敬请期待。\n{% endblockquote %}","slug":"electron","published":1,"updated":"2019-03-22T09:31:05.918Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtjvp8we0006nwwfnm3hq9b9","content":"<blockquote><p>Electron 提供了一个实时构建桌面应用的纯 JavaScript 环境。Electron 可以获取到你定义在 package.json 中 main 文件内容，然后执行它。通过这个文件（通常我们称之为main.js），可以创建一个应用窗口，这个应用窗口包含一个渲染好的 web 界面，还可以和系统原生的 GUI 交互。</p>\n</blockquote>\n<blockquote><p>直接启动main.js是无法显示应用窗口的,在main.js调用BrowserWindow模块才能使用窗口。每个窗口都将执行属于自己的渲染进程。渲染进程处理的是一个正真的web页面”HTML+CSS+JavaScript”。前端人员也可以用web的形式开发桌面应用啦。</p>\n</blockquote>\n<img src=\"/2017/01/13/electron/tree.png\" title=\"electron工作示意图\">\n<h1 id=\"开始electron编程\"><a href=\"#开始electron编程\" class=\"headerlink\" title=\"开始electron编程\"></a>开始electron编程</h1><h2 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h2><blockquote><ul>\n<li>app 项目目录<ul>\n<li>index.js index页面的渲染进程</li>\n<li>list.js  list页面的渲染进程</li>\n<li>statics  静态资源目录</li>\n</ul>\n</li>\n<li>main.js 主进程</li>\n<li>package.json </li>\n</ul>\n</blockquote>\n<h2 id=\"在项目文件夹中建造package-json文件，内容如下\"><a href=\"#在项目文件夹中建造package-json文件，内容如下\" class=\"headerlink\" title=\"在项目文件夹中建造package.json文件，内容如下\"></a>在项目文件夹中建造package.json文件，内容如下</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"yao\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"main\"</span>: <span class=\"string\">\"./main.js\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"start\"</span>: <span class=\"string\">\"electron .\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装electron\"><a href=\"#安装electron\" class=\"headerlink\" title=\"安装electron\"></a>安装electron</h2><figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --<span class=\"built_in\">save</span>-<span class=\"built_in\">dev</span> electron</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建入口程序main-js\"><a href=\"#创建入口程序main-js\" class=\"headerlink\" title=\"创建入口程序main.js\"></a>创建入口程序main.js</h2><h3 id=\"引入项目依赖，ES6写法\"><a href=\"#引入项目依赖，ES6写法\" class=\"headerlink\" title=\"引入项目依赖，ES6写法\"></a>引入项目依赖，ES6写法</h3><blockquote><p>BrowserWindow管理窗口,子窗口可以向ipcMain发送事件，达到窗口间通信的效果</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;app, BrowserWindow , ipcMain&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'electron'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> url = <span class=\"built_in\">require</span>(<span class=\"string\">'url'</span>)</span><br><span class=\"line\"><span class=\"comment\">//窗口全局变量</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> win</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建主窗口\"><a href=\"#创建主窗口\" class=\"headerlink\" title=\"创建主窗口\"></a>创建主窗口</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createWindow</span> <span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 创建窗口</span></span><br><span class=\"line\">  win = <span class=\"keyword\">new</span> BrowserWindow(&#123;width: <span class=\"number\">800</span>, height: <span class=\"number\">600</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 加载本地app的html</span></span><br><span class=\"line\">  win.loadURL(url.format(&#123;</span><br><span class=\"line\">    pathname: path.join(__dirname, <span class=\"string\">'index.html'</span>),</span><br><span class=\"line\">    protocol: <span class=\"string\">'file:'</span>,</span><br><span class=\"line\">    slashes: <span class=\"keyword\">true</span></span><br><span class=\"line\">  &#125;))</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 打开控制台</span></span><br><span class=\"line\">  win.webContents.openDevTools()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 绑定函数，当窗口关闭时触发</span></span><br><span class=\"line\">  win.on(<span class=\"string\">'closed'</span>, () =&gt; &#123;</span><br><span class=\"line\">    win = <span class=\"keyword\">null</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"绑定事件\"><a href=\"#绑定事件\" class=\"headerlink\" title=\"绑定事件\"></a>绑定事件</h3><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">//</span>当app加载完即启用回调函数</span><br><span class=\"line\">app.<span class=\"literal\">on</span>(<span class=\"string\">'ready'</span>, createWindow)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"regexp\">//</span>当所有窗口关闭启用回调函数</span><br><span class=\"line\">app.<span class=\"literal\">on</span>(<span class=\"string\">'window-all-closed'</span>, <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (process.platform !== <span class=\"string\">'darwin'</span>) &#123;</span><br><span class=\"line\">    app.quit()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"regexp\">//</span>当app活跃时，启动回调</span><br><span class=\"line\">app.<span class=\"literal\">on</span>(<span class=\"string\">'activate'</span>, <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (win === <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    createWindow()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建页面\"><a href=\"#创建页面\" class=\"headerlink\" title=\"创建页面\"></a>创建页面</h2><h3 id=\"index-html\"><a href=\"#index-html\" class=\"headerlink\" title=\"index.html\"></a>index.html</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>gulp打包<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"statics/styles/reset.css\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"statics/styles/index.css\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>hello word<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>open list<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"comment\">//加载jquery</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">window</span>.$ = <span class=\"built_in\">window</span>.jQuery = <span class=\"built_in\">require</span>(<span class=\"string\">'./statics/scripts/jquery-1.11.2.min.js'</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"comment\">// 加载管理自己渲染进程的js</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">require</span>(<span class=\"string\">'./index.js'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"list-html\"><a href=\"#list-html\" class=\"headerlink\" title=\"list.html\"></a>list.html</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>List消息列表<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"statics/styles/reset.css\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"statics/styles/list.css\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list_content\"</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"comment\">//加载jquery</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">window</span>.$ = <span class=\"built_in\">window</span>.jQuery = <span class=\"built_in\">require</span>(<span class=\"string\">'./statics/scripts/jquery-1.11.2.min.js'</span>);</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"comment\">//家贼管理自己渲染进程的js </span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">require</span>(<span class=\"string\">'./list.js'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"electron页面之间的消息传递\"><a href=\"#electron页面之间的消息传递\" class=\"headerlink\" title=\"electron页面之间的消息传递\"></a>electron页面之间的消息传递</h1><h2 id=\"index-js\"><a href=\"#index-js\" class=\"headerlink\" title=\"index.js\"></a>index.js</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">    ipcRenderer</span><br><span class=\"line\">&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'electron'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> msg=<span class=\"string\">'i am yao'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 点击按钮,打开List列表</span></span><br><span class=\"line\"><span class=\"comment\">// 向主进程传递open-list-window事件</span></span><br><span class=\"line\">$(<span class=\"string\">'button'</span>).on(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    ipcRenderer.send(<span class=\"string\">'open-list-window'</span>, msg);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"main-js添加事件监听-open-list-window事件\"><a href=\"#main-js添加事件监听-open-list-window事件\" class=\"headerlink\" title=\"main.js添加事件监听 open-list-window事件\"></a>main.js添加事件监听 open-list-window事件</h2><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">//</span>子窗口</span><br><span class=\"line\">let listWindow</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"regexp\">//</span>监听渲染进程发过来的事件，执行回调 ,子窗口被打开</span><br><span class=\"line\"></span><br><span class=\"line\">ipcMain.<span class=\"literal\">on</span>(<span class=\"string\">'open-list-window'</span>, <span class=\"function\"><span class=\"params\">(event, arg)</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (listWindow) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  listWindow = <span class=\"keyword\">new</span> BrowserWindow(&#123;</span><br><span class=\"line\">    height: <span class=\"number\">500</span>,</span><br><span class=\"line\">    width: <span class=\"number\">500</span>,</span><br><span class=\"line\">    resizable: <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  listWindow.loadURL(url.format(&#123;</span><br><span class=\"line\">    pathname: path.join(__dirname, <span class=\"string\">'app/list.html'</span>),</span><br><span class=\"line\">    protocol: <span class=\"string\">'file:'</span>,</span><br><span class=\"line\">    slashes: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;))</span><br><span class=\"line\">  listWindow.webContents.openDevTools();</span><br><span class=\"line\">  listWindow.<span class=\"literal\">on</span>(<span class=\"string\">'closed'</span>, <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    listWindow = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"list-js添加事件监听-hello事件\"><a href=\"#list-js添加事件监听-hello事件\" class=\"headerlink\" title=\"list.js添加事件监听 hello事件\"></a>list.js添加事件监听 hello事件</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//子窗口发送消息给主进程</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;ipcRenderer&#125;=<span class=\"built_in\">require</span>(<span class=\"string\">'electron'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">ipcRenderer.send(<span class=\"string\">'hello'</span>,<span class=\"string\">'i am 子窗口'</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"main-js添加代码\"><a href=\"#main-js添加代码\" class=\"headerlink\" title=\"main.js添加代码\"></a>main.js添加代码</h2><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ipcMain.<span class=\"literal\">on</span>(<span class=\"string\">'hello'</span>, <span class=\"function\"><span class=\"params\">(event, arg)</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(arg)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<blockquote><p>控制台最后打印出i am 子窗口。</p>\n</blockquote>\n<h1 id=\"electron展望\"><a href=\"#electron展望\" class=\"headerlink\" title=\"electron展望\"></a>electron展望</h1><blockquote><p>electron主进程可以执行node的exec模块，调用系统命令,可以通过web页面构建良好的用户交互体验，通过点击按钮，执行一些系统命令。</p>\n<p>比如: 建造一个项目， 利用localstorage去记录文件，选择项目文件，复制改文件到app中的source中，安装依赖，执行app里面的打包脚本，最后输出到文件目录中dist处。可以构建一个类似weflow的打包桌面应用。</p>\n<p>目前正在进行中,敬请期待。</p>\n</blockquote>","site":{"data":{}},"excerpt":"","more":"<blockquote><p>Electron 提供了一个实时构建桌面应用的纯 JavaScript 环境。Electron 可以获取到你定义在 package.json 中 main 文件内容，然后执行它。通过这个文件（通常我们称之为main.js），可以创建一个应用窗口，这个应用窗口包含一个渲染好的 web 界面，还可以和系统原生的 GUI 交互。</p>\n</blockquote>\n<blockquote><p>直接启动main.js是无法显示应用窗口的,在main.js调用BrowserWindow模块才能使用窗口。每个窗口都将执行属于自己的渲染进程。渲染进程处理的是一个正真的web页面”HTML+CSS+JavaScript”。前端人员也可以用web的形式开发桌面应用啦。</p>\n</blockquote>\n<img src=\"/2017/01/13/electron/tree.png\" title=\"electron工作示意图\">\n<h1 id=\"开始electron编程\"><a href=\"#开始electron编程\" class=\"headerlink\" title=\"开始electron编程\"></a>开始electron编程</h1><h2 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h2><blockquote><ul>\n<li>app 项目目录<ul>\n<li>index.js index页面的渲染进程</li>\n<li>list.js  list页面的渲染进程</li>\n<li>statics  静态资源目录</li>\n</ul>\n</li>\n<li>main.js 主进程</li>\n<li>package.json </li>\n</ul>\n</blockquote>\n<h2 id=\"在项目文件夹中建造package-json文件，内容如下\"><a href=\"#在项目文件夹中建造package-json文件，内容如下\" class=\"headerlink\" title=\"在项目文件夹中建造package.json文件，内容如下\"></a>在项目文件夹中建造package.json文件，内容如下</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"yao\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"main\"</span>: <span class=\"string\">\"./main.js\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"start\"</span>: <span class=\"string\">\"electron .\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装electron\"><a href=\"#安装electron\" class=\"headerlink\" title=\"安装electron\"></a>安装electron</h2><figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --<span class=\"built_in\">save</span>-<span class=\"built_in\">dev</span> electron</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建入口程序main-js\"><a href=\"#创建入口程序main-js\" class=\"headerlink\" title=\"创建入口程序main.js\"></a>创建入口程序main.js</h2><h3 id=\"引入项目依赖，ES6写法\"><a href=\"#引入项目依赖，ES6写法\" class=\"headerlink\" title=\"引入项目依赖，ES6写法\"></a>引入项目依赖，ES6写法</h3><blockquote><p>BrowserWindow管理窗口,子窗口可以向ipcMain发送事件，达到窗口间通信的效果</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;app, BrowserWindow , ipcMain&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'electron'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> url = <span class=\"built_in\">require</span>(<span class=\"string\">'url'</span>)</span><br><span class=\"line\"><span class=\"comment\">//窗口全局变量</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> win</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建主窗口\"><a href=\"#创建主窗口\" class=\"headerlink\" title=\"创建主窗口\"></a>创建主窗口</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createWindow</span> <span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 创建窗口</span></span><br><span class=\"line\">  win = <span class=\"keyword\">new</span> BrowserWindow(&#123;width: <span class=\"number\">800</span>, height: <span class=\"number\">600</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 加载本地app的html</span></span><br><span class=\"line\">  win.loadURL(url.format(&#123;</span><br><span class=\"line\">    pathname: path.join(__dirname, <span class=\"string\">'index.html'</span>),</span><br><span class=\"line\">    protocol: <span class=\"string\">'file:'</span>,</span><br><span class=\"line\">    slashes: <span class=\"keyword\">true</span></span><br><span class=\"line\">  &#125;))</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 打开控制台</span></span><br><span class=\"line\">  win.webContents.openDevTools()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 绑定函数，当窗口关闭时触发</span></span><br><span class=\"line\">  win.on(<span class=\"string\">'closed'</span>, () =&gt; &#123;</span><br><span class=\"line\">    win = <span class=\"keyword\">null</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"绑定事件\"><a href=\"#绑定事件\" class=\"headerlink\" title=\"绑定事件\"></a>绑定事件</h3><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">//</span>当app加载完即启用回调函数</span><br><span class=\"line\">app.<span class=\"literal\">on</span>(<span class=\"string\">'ready'</span>, createWindow)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"regexp\">//</span>当所有窗口关闭启用回调函数</span><br><span class=\"line\">app.<span class=\"literal\">on</span>(<span class=\"string\">'window-all-closed'</span>, <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (process.platform !== <span class=\"string\">'darwin'</span>) &#123;</span><br><span class=\"line\">    app.quit()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"regexp\">//</span>当app活跃时，启动回调</span><br><span class=\"line\">app.<span class=\"literal\">on</span>(<span class=\"string\">'activate'</span>, <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (win === <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    createWindow()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建页面\"><a href=\"#创建页面\" class=\"headerlink\" title=\"创建页面\"></a>创建页面</h2><h3 id=\"index-html\"><a href=\"#index-html\" class=\"headerlink\" title=\"index.html\"></a>index.html</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>gulp打包<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"statics/styles/reset.css\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"statics/styles/index.css\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>hello word<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>open list<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"comment\">//加载jquery</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">window</span>.$ = <span class=\"built_in\">window</span>.jQuery = <span class=\"built_in\">require</span>(<span class=\"string\">'./statics/scripts/jquery-1.11.2.min.js'</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"comment\">// 加载管理自己渲染进程的js</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">require</span>(<span class=\"string\">'./index.js'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"list-html\"><a href=\"#list-html\" class=\"headerlink\" title=\"list.html\"></a>list.html</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>List消息列表<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"statics/styles/reset.css\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"statics/styles/list.css\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list_content\"</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"comment\">//加载jquery</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">window</span>.$ = <span class=\"built_in\">window</span>.jQuery = <span class=\"built_in\">require</span>(<span class=\"string\">'./statics/scripts/jquery-1.11.2.min.js'</span>);</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"comment\">//家贼管理自己渲染进程的js </span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">require</span>(<span class=\"string\">'./list.js'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"electron页面之间的消息传递\"><a href=\"#electron页面之间的消息传递\" class=\"headerlink\" title=\"electron页面之间的消息传递\"></a>electron页面之间的消息传递</h1><h2 id=\"index-js\"><a href=\"#index-js\" class=\"headerlink\" title=\"index.js\"></a>index.js</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">    ipcRenderer</span><br><span class=\"line\">&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'electron'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> msg=<span class=\"string\">'i am yao'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 点击按钮,打开List列表</span></span><br><span class=\"line\"><span class=\"comment\">// 向主进程传递open-list-window事件</span></span><br><span class=\"line\">$(<span class=\"string\">'button'</span>).on(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    ipcRenderer.send(<span class=\"string\">'open-list-window'</span>, msg);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"main-js添加事件监听-open-list-window事件\"><a href=\"#main-js添加事件监听-open-list-window事件\" class=\"headerlink\" title=\"main.js添加事件监听 open-list-window事件\"></a>main.js添加事件监听 open-list-window事件</h2><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">//</span>子窗口</span><br><span class=\"line\">let listWindow</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"regexp\">//</span>监听渲染进程发过来的事件，执行回调 ,子窗口被打开</span><br><span class=\"line\"></span><br><span class=\"line\">ipcMain.<span class=\"literal\">on</span>(<span class=\"string\">'open-list-window'</span>, <span class=\"function\"><span class=\"params\">(event, arg)</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (listWindow) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  listWindow = <span class=\"keyword\">new</span> BrowserWindow(&#123;</span><br><span class=\"line\">    height: <span class=\"number\">500</span>,</span><br><span class=\"line\">    width: <span class=\"number\">500</span>,</span><br><span class=\"line\">    resizable: <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  listWindow.loadURL(url.format(&#123;</span><br><span class=\"line\">    pathname: path.join(__dirname, <span class=\"string\">'app/list.html'</span>),</span><br><span class=\"line\">    protocol: <span class=\"string\">'file:'</span>,</span><br><span class=\"line\">    slashes: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;))</span><br><span class=\"line\">  listWindow.webContents.openDevTools();</span><br><span class=\"line\">  listWindow.<span class=\"literal\">on</span>(<span class=\"string\">'closed'</span>, <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    listWindow = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"list-js添加事件监听-hello事件\"><a href=\"#list-js添加事件监听-hello事件\" class=\"headerlink\" title=\"list.js添加事件监听 hello事件\"></a>list.js添加事件监听 hello事件</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//子窗口发送消息给主进程</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;ipcRenderer&#125;=<span class=\"built_in\">require</span>(<span class=\"string\">'electron'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">ipcRenderer.send(<span class=\"string\">'hello'</span>,<span class=\"string\">'i am 子窗口'</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"main-js添加代码\"><a href=\"#main-js添加代码\" class=\"headerlink\" title=\"main.js添加代码\"></a>main.js添加代码</h2><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ipcMain.<span class=\"literal\">on</span>(<span class=\"string\">'hello'</span>, <span class=\"function\"><span class=\"params\">(event, arg)</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(arg)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<blockquote><p>控制台最后打印出i am 子窗口。</p>\n</blockquote>\n<h1 id=\"electron展望\"><a href=\"#electron展望\" class=\"headerlink\" title=\"electron展望\"></a>electron展望</h1><blockquote><p>electron主进程可以执行node的exec模块，调用系统命令,可以通过web页面构建良好的用户交互体验，通过点击按钮，执行一些系统命令。</p>\n<p>比如: 建造一个项目， 利用localstorage去记录文件，选择项目文件，复制改文件到app中的source中，安装依赖，执行app里面的打包脚本，最后输出到文件目录中dist处。可以构建一个类似weflow的打包桌面应用。</p>\n<p>目前正在进行中,敬请期待。</p>\n</blockquote>"},{"title":"压缩js兼容ie8及以下版本","date":"2017-01-16T01:56:00.000Z","_content":"{% blockquote %}\n    无论是用gulp还是grunt打包,都是调用了uglify.js的包,打包后的代码有时候会在ie8及以下版本中报错。\n{% endblockquote%}\n\n\n# uglify.js兼容ie8的配置方法\n\n## gulp\n\n### 下载项目依赖\n\n```\nnpm install --save-dev uglify-js\nnpm install --save-dev gulp-uglify/minifier\n\n```\n\n### options\n\n```\ngulp.src(paths.tmp.modules)\n    .pipe(minifier({\n        output:{\n            quote_keys:true\n        },\n        compress:{\n            screw_ie8:false\n        }\n    }, uglifyjs))\n    .pipe(gulp.dest(paths.dist.modules));\n\n```\n\n* minifier options\n\n    * quote_keys:key值自动加上引号，在ie中，关键字入delete作为索引值打包，浏览器会报错，如果设置为true，则自动加上引号不报错\n\n    * screw_ie8:兼容ie8\n\n\n## grunt\n\n### 下载项目依赖\n\n```\nnpm install --save-dev grunt-uglify\n\n```\n\n### options\n\nscrewIE8: false\n","source":"_posts/uglify.md","raw":"---\ntitle: 压缩js兼容ie8及以下版本\ndate: 2017-01-16 09:56:00\ncategories: 打包\ntags: uglify.js\n---\n{% blockquote %}\n    无论是用gulp还是grunt打包,都是调用了uglify.js的包,打包后的代码有时候会在ie8及以下版本中报错。\n{% endblockquote%}\n\n\n# uglify.js兼容ie8的配置方法\n\n## gulp\n\n### 下载项目依赖\n\n```\nnpm install --save-dev uglify-js\nnpm install --save-dev gulp-uglify/minifier\n\n```\n\n### options\n\n```\ngulp.src(paths.tmp.modules)\n    .pipe(minifier({\n        output:{\n            quote_keys:true\n        },\n        compress:{\n            screw_ie8:false\n        }\n    }, uglifyjs))\n    .pipe(gulp.dest(paths.dist.modules));\n\n```\n\n* minifier options\n\n    * quote_keys:key值自动加上引号，在ie中，关键字入delete作为索引值打包，浏览器会报错，如果设置为true，则自动加上引号不报错\n\n    * screw_ie8:兼容ie8\n\n\n## grunt\n\n### 下载项目依赖\n\n```\nnpm install --save-dev grunt-uglify\n\n```\n\n### options\n\nscrewIE8: false\n","slug":"uglify","published":1,"updated":"2019-03-22T09:31:05.922Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtjvp8wh0008nwwfmyefxioy","content":"<blockquote><p>无论是用gulp还是grunt打包,都是调用了uglify.js的包,打包后的代码有时候会在ie8及以下版本中报错。</p>\n</blockquote>\n<h1 id=\"uglify-js兼容ie8的配置方法\"><a href=\"#uglify-js兼容ie8的配置方法\" class=\"headerlink\" title=\"uglify.js兼容ie8的配置方法\"></a>uglify.js兼容ie8的配置方法</h1><h2 id=\"gulp\"><a href=\"#gulp\" class=\"headerlink\" title=\"gulp\"></a>gulp</h2><h3 id=\"下载项目依赖\"><a href=\"#下载项目依赖\" class=\"headerlink\" title=\"下载项目依赖\"></a>下载项目依赖</h3><figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --<span class=\"built_in\">save</span>-<span class=\"built_in\">dev</span> uglify-js</span><br><span class=\"line\">npm install --<span class=\"built_in\">save</span>-<span class=\"built_in\">dev</span> gulp-uglify/minifier</span><br></pre></td></tr></table></figure>\n<h3 id=\"options\"><a href=\"#options\" class=\"headerlink\" title=\"options\"></a>options</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">gulp.src(paths.tmp.modules)</span></span><br><span class=\"line\">    <span class=\"string\">.pipe(minifier(&#123;</span></span><br><span class=\"line\"><span class=\"attr\">        output:</span><span class=\"string\">&#123;</span></span><br><span class=\"line\"><span class=\"attr\">            quote_keys:</span><span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"string\">&#125;,</span></span><br><span class=\"line\"><span class=\"attr\">        compress:</span><span class=\"string\">&#123;</span></span><br><span class=\"line\"><span class=\"attr\">            screw_ie8:</span><span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"string\">&#125;</span></span><br><span class=\"line\">    <span class=\"string\">&#125;,</span> <span class=\"string\">uglifyjs))</span></span><br><span class=\"line\">    <span class=\"string\">.pipe(gulp.dest(paths.dist.modules));</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>minifier options</p>\n<ul>\n<li><p>quote_keys:key值自动加上引号，在ie中，关键字入delete作为索引值打包，浏览器会报错，如果设置为true，则自动加上引号不报错</p>\n</li>\n<li><p>screw_ie8:兼容ie8</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"grunt\"><a href=\"#grunt\" class=\"headerlink\" title=\"grunt\"></a>grunt</h2><h3 id=\"下载项目依赖-1\"><a href=\"#下载项目依赖-1\" class=\"headerlink\" title=\"下载项目依赖\"></a>下载项目依赖</h3><figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --<span class=\"built_in\">save</span>-<span class=\"built_in\">dev</span> grunt-uglify</span><br></pre></td></tr></table></figure>\n<h3 id=\"options-1\"><a href=\"#options-1\" class=\"headerlink\" title=\"options\"></a>options</h3><p>screwIE8: false</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote><p>无论是用gulp还是grunt打包,都是调用了uglify.js的包,打包后的代码有时候会在ie8及以下版本中报错。</p>\n</blockquote>\n<h1 id=\"uglify-js兼容ie8的配置方法\"><a href=\"#uglify-js兼容ie8的配置方法\" class=\"headerlink\" title=\"uglify.js兼容ie8的配置方法\"></a>uglify.js兼容ie8的配置方法</h1><h2 id=\"gulp\"><a href=\"#gulp\" class=\"headerlink\" title=\"gulp\"></a>gulp</h2><h3 id=\"下载项目依赖\"><a href=\"#下载项目依赖\" class=\"headerlink\" title=\"下载项目依赖\"></a>下载项目依赖</h3><figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --<span class=\"built_in\">save</span>-<span class=\"built_in\">dev</span> uglify-js</span><br><span class=\"line\">npm install --<span class=\"built_in\">save</span>-<span class=\"built_in\">dev</span> gulp-uglify/minifier</span><br></pre></td></tr></table></figure>\n<h3 id=\"options\"><a href=\"#options\" class=\"headerlink\" title=\"options\"></a>options</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">gulp.src(paths.tmp.modules)</span></span><br><span class=\"line\">    <span class=\"string\">.pipe(minifier(&#123;</span></span><br><span class=\"line\"><span class=\"attr\">        output:</span><span class=\"string\">&#123;</span></span><br><span class=\"line\"><span class=\"attr\">            quote_keys:</span><span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"string\">&#125;,</span></span><br><span class=\"line\"><span class=\"attr\">        compress:</span><span class=\"string\">&#123;</span></span><br><span class=\"line\"><span class=\"attr\">            screw_ie8:</span><span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"string\">&#125;</span></span><br><span class=\"line\">    <span class=\"string\">&#125;,</span> <span class=\"string\">uglifyjs))</span></span><br><span class=\"line\">    <span class=\"string\">.pipe(gulp.dest(paths.dist.modules));</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>minifier options</p>\n<ul>\n<li><p>quote_keys:key值自动加上引号，在ie中，关键字入delete作为索引值打包，浏览器会报错，如果设置为true，则自动加上引号不报错</p>\n</li>\n<li><p>screw_ie8:兼容ie8</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"grunt\"><a href=\"#grunt\" class=\"headerlink\" title=\"grunt\"></a>grunt</h2><h3 id=\"下载项目依赖-1\"><a href=\"#下载项目依赖-1\" class=\"headerlink\" title=\"下载项目依赖\"></a>下载项目依赖</h3><figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --<span class=\"built_in\">save</span>-<span class=\"built_in\">dev</span> grunt-uglify</span><br></pre></td></tr></table></figure>\n<h3 id=\"options-1\"><a href=\"#options-1\" class=\"headerlink\" title=\"options\"></a>options</h3><p>screwIE8: false</p>\n"},{"title":"gulp打包之解耦任务","date":"2017-01-13T08:35:43.000Z","_content":"\n{% blockquote %}\n    如果项目太大,需要拆分任务，可能会导致gulpfile.js体积过大,难以维护。\n    为了解决这个问题，应将任务拆分到不同的文件中，即解耦。\n{% endblockquote%}\n\n# 安装gulp4.0\n\n{% blockquote %}\n    利用gulp.series控制串行任务\n    利用gulp.parallel控制并行任务\n    更好的利用node高并发的特点，更快的，明确的，进行构建\n{% endblockquote%}\n\n```\n    npm install gulpjs/gulp#4.0 -g\n    npm install gulpjs/gulp#4.0 --save-dev\n\n```\n\n# 创建gulpfile.js\n\n```\n    //__dirname为当前目录\n    //deep可配置,控制递归的次数\n    //这段代码 会去自动加载本目录下的_tasks的index.js,传递gulp\n    //执行gulp --tasks可列出所有任务列表\n\n   var gulp=require('gulp');\n   var fs=require('fs');\n   var path=require('path');\n\n   var deep=3;\n   run_tasks('_tasks');\n   function run_tasks(tasks_path){\n       if (--deep < 0) {\n           throw new Error('something wrong in require tasks!');\n           return;\n       }\n       tasks_path=path.resolve(__dirname,tasks_path);\n       if (fs.existsSync(tasks_path)) {\n           require(tasks_path)(gulp)\n       } else {\n           run_tasks(tasks_path);\n       }\n   } \n\n```\n\n# 创建_tasks文件夹,并在该文件夹中创建index.js\n\n```\n    //index.js\n    //gulpfile执行即加载了该文件,并执行了改文件\n    //当前目录下所有符合命名规则(见正则)会被加载\n    //即gulpfile.js依赖了这个文件夹下所有符合命名规则的文件\n    var fs = require('fs');\n    var path = require('path');\n\n    module.exports = function (gulp) {\n        fs.readdirSync(__dirname).filter(function (file) {\n            return (file.indexOf(\".\") !== 0) && (file.indexOf('Task') === 0);\n        }).forEach(function (file) {\n            var registerTask = require(path.join(__dirname, file));\n            registerTask(gulp);\n        });\n    };\n\n\n```\n\n# 建立TaskBuildDev.js(示例)\n```\n    const gulp = require('gulp');\n    const spritesmith = require('gulp.spritesmith');\n    const sass = require('gulp-sass');\n    const moment = require('moment');\n    const del = require('del');\n    const merge = require('merge-stream');\n    const paths = {\n        src: {\n            dir: './',\n            images: ['./web/statics/images/icons/*.png', './web/statics/images/large/*.png', './web/statics/images/login/*.png', './web/statics/images/saas_console/icons/*.png'],\n            sass: ['./web/statics/sass/**/*.scss'],\n            source: './web/**/*'\n        },\n        dev: {\n            dir: './',\n            images: './web/statics/images/',\n            sass: './web/statics/sass',\n            css: './web/statics/styles',\n            sprite: './web/statics/images/icons-*',\n        }\n    };\n    const imageName=formatName('icons.png');\n    //格式化名称 版本号\n    function formatName(name) {\n        var version = moment().format('MMDDHHmm');\n        var tmp = name.split('.');\n        return tmp[0] + '-' + version + '.' + tmp[1];\n    }\n    module.exports=function(gulp){\n        // 删除老版本雪碧图\n        function delSprite() {\n            return del(paths.dev.sprite);\n        }\n        // 编译saas\n        function compileSass() {\n            return gulp.src(paths.src.sass)\n                .pipe(sass().on('error', sass.logError))\n                .pipe(gulp.dest(paths.dev.css));\n        }\n        // 生成雪碧图\n        function sprite() {\n            var spriteData = gulp.src(paths.src.images)\n                .pipe(spritesmith({\n                    imgName:imageName,\n                    cssName: '_sprite.scss',\n                    cssSpritesheetName: 'icon',\n                    padding: 5,\n                    imgPath:'../images/'+imageName\n                }));\n            var imgStream = spriteData.img.pipe(gulp.dest(paths.dev.images));\n            var cssStream = spriteData.css.pipe(gulp.dest(paths.dev.sass));\n            return merge(imgStream, cssStream);\n        }\n        // 重新生成雪碧图\n        gulp.task('icons', gulp.series(\n            delSprite,\n            sprite\n        ));\n        // 编译sass\n        gulp.task('sass',gulp.series(compileSass));\n        // 生成雪碧图 并生成 saas\n        gulp.task('build_dev',gulp.series(\n            delSprite,\n            sprite,\n            compileSass\n        ));\n        // 监听sass\n        gulp.task('dev', () => {\n            gulp.watch(paths.src.sass, gulp.series(compileSass));\n        });\n    }\n```\n#建立TaskBuildWeb.js (示例)\n\n```\n    const gulp = require('gulp');\n    const spritesmith = require('gulp.spritesmith');\n    const sass = require('gulp-sass');\n    const moment = require('moment');\n    const del = require('del');\n    const replace = require('gulp-replace');\n    const merge = require('merge-stream');\n    const gulpif = require('gulp-if');\n    const uglifyjs = require('uglify-js');\n    const minifier = require('gulp-uglify/minifier')\n    const cleanCSS = require('gulp-clean-css');\n    const rename = require('gulp-rename');\n    require('gulp-grunt')(gulp);\n    const version = moment().format('MMDDHHmm');\n    const paths = {\n        src: {\n            dir: './',\n            images: ['./web/statics/images/icons/*.png', './web/statics/images/large/*.png', './web/statics/images/login/*.png', './web/statics/images/saas_console/icons/*.png'],\n            source: ['./web/**/*', '!./web/plugins/**/*'],\n            modules: './web/modules/**/*',\n            sprite: './web/statics/sass/_sprite.scss'\n        },\n        dist: {\n            dir: './dist',\n            tpl: ['./dist/web/modules/**/*.tpl', '!./dist/web/modules/page/account/**/*.tpl'],\n            cleanmodules: './dist/web/modules/**/*',\n            modules: './dist/web/modules',\n            base: './dist/web/modules/base/**/*.js',\n            css: ['./dist/web/statics/styles/**/*.css', '!./dist/web/statics/**/*.min.css'],\n            html: ['./dist/web/*.html'],\n            statics: [\n                './dist/web/statics/images/icons',\n                './dist/web/statics/images/large',\n                './dist/web/statics/images/login',\n                './dist/web/statics/sass',\n                './dist/web/tmp',\n                './dist/web/modules/view'\n            ],\n            others: ['./dist/web/statics/scripts/sha1.js', './dist/web/statics/scripts/sha1_worker.js'],\n            gif: './dist/web/statics/sass/_sprite_gif.scss',\n            sass: ['./dist/web/statics/sass/**/*.scss'],\n            styles: './dist/web/statics/styles'\n        },\n        tmp: {\n            dir: './dist/web/tmp',\n            base: './dist/web/tmp/modules/base',\n            modules: './dist/web/tmp/modules/**/*'\n        }\n    };\n    module.exports = function(gulp) {\n        // 复制modules\n        function copySource() {\n            return gulp.src(paths.src.source, {\n                base: paths.src.dir\n            }).pipe(gulp.dest(paths.dist.dir));\n        }\n\n        function copyBase() {\n            return gulp.src(paths.dist.base)\n                .pipe(gulp.dest(paths.tmp.base));\n        }\n\n\n        function replaceTpl() {\n            return gulp.src(paths.dist.tpl, {\n                    base: paths.dist.dir\n                }).pipe(replace(/\\\\/g, '\\\\\\\\'))\n                .pipe(gulp.dest(paths.dist.dir))\n        }\n        // 清除dist文件夹中的文件\n        function cleanDist() {\n            return del([paths.dist.dir]);\n        }\n        // 压缩js\n        function uglifyJS() {\n            return gulp.src(paths.tmp.modules)\n                .pipe(minifier({\n                    output:{\n                        quote_keys:true\n                    },\n                    compress:{\n                        screw_ie8:false\n                    }\n                }, uglifyjs))\n                .pipe(gulp.dest(paths.dist.modules));\n        }\n        // 压缩其他\n        function uglifyOthers() {\n            return gulp.src(paths.dist.others, {\n                    base: paths.dist.dir\n                })\n                .pipe(minifier({\n                    output:{\n                        quote_keys:true\n                    },\n                    compress:{\n                        screw_ie8:false\n                    }\n                }, uglifyjs))\n                .pipe(gulp.dest(paths.dist.dir))\n        }\n        // 压缩css\n        function uglifyCss() {\n            return gulp.src(paths.dist.css, {\n                    base: paths.dist.dir\n                })\n                .pipe(cleanCSS())\n                .pipe(gulp.dest(paths.dist.dir));\n        }\n        // 删除dist中没有压缩合并的modules\n        function cleanModules() {\n            return del([paths.dist.cleanmodules]);\n        }\n        //删除无用的静态资源\n        function cleanStatics() {\n            return del(paths.dist.statics);\n        }\n        //添加版本号\n        function addVersion() {\n            return gulp.src(paths.dist.html, {\n                    base: paths.dist.dir\n                })\n                .pipe(replace(/@@version/g, version))\n                .pipe(gulp.dest(paths.dist.dir));\n        }\n        // 支持IE\n        function createGif() {\n            return gulp.src(paths.src.sprite)\n                .pipe(replace(/.png/g, '.gif'))\n                .pipe(rename('web/statics/sass/_sprite_gif.scss'))\n                .pipe(gulp.dest(paths.dist.dir));\n        }\n        //删除\n        function cleanGif() {\n            return del(paths.dist.gif);\n        }\n\n        function compileSass() {\n            return gulp.src(paths.dist.sass)\n                .pipe(sass().on('error', sass.logError))\n                .pipe(gulp.dest(paths.dist.styles));\n        }\n        gulp.task('build_web', gulp.series(\n            cleanDist,\n            gulp.parallel('icons'),\n            copySource,\n            replaceTpl,\n            gulp.parallel('grunt-imagemagick-convert'),\n            gulp.parallel('grunt-transport:dist'),\n            gulp.parallel('grunt-concat'),\n            copyBase,\n            cleanModules,\n            cleanGif,\n            createGif,\n            compileSass,\n            uglifyJS,\n            uglifyOthers,\n            uglifyCss,\n            cleanStatics,\n            addVersion\n        ));\n        gulp.task('build', gulp.series(\n            gulp.parallel('build_web'),\n            gulp.parallel('copyWap', 'copyMobile')\n        ));\n    }\n\n```\n{% blockquote %}\n    可以将不同功能的任务拆分成多个文件。每个任务都享有自己的私有变量。\n    更容易扩展和维护。\n{% endblockquote%}","source":"_posts/gulp.md","raw":"---\ntitle: gulp打包之解耦任务\ndate: 2017-01-13 16:35:43\ncategories: 打包\ntags:  gulp\n---\n\n{% blockquote %}\n    如果项目太大,需要拆分任务，可能会导致gulpfile.js体积过大,难以维护。\n    为了解决这个问题，应将任务拆分到不同的文件中，即解耦。\n{% endblockquote%}\n\n# 安装gulp4.0\n\n{% blockquote %}\n    利用gulp.series控制串行任务\n    利用gulp.parallel控制并行任务\n    更好的利用node高并发的特点，更快的，明确的，进行构建\n{% endblockquote%}\n\n```\n    npm install gulpjs/gulp#4.0 -g\n    npm install gulpjs/gulp#4.0 --save-dev\n\n```\n\n# 创建gulpfile.js\n\n```\n    //__dirname为当前目录\n    //deep可配置,控制递归的次数\n    //这段代码 会去自动加载本目录下的_tasks的index.js,传递gulp\n    //执行gulp --tasks可列出所有任务列表\n\n   var gulp=require('gulp');\n   var fs=require('fs');\n   var path=require('path');\n\n   var deep=3;\n   run_tasks('_tasks');\n   function run_tasks(tasks_path){\n       if (--deep < 0) {\n           throw new Error('something wrong in require tasks!');\n           return;\n       }\n       tasks_path=path.resolve(__dirname,tasks_path);\n       if (fs.existsSync(tasks_path)) {\n           require(tasks_path)(gulp)\n       } else {\n           run_tasks(tasks_path);\n       }\n   } \n\n```\n\n# 创建_tasks文件夹,并在该文件夹中创建index.js\n\n```\n    //index.js\n    //gulpfile执行即加载了该文件,并执行了改文件\n    //当前目录下所有符合命名规则(见正则)会被加载\n    //即gulpfile.js依赖了这个文件夹下所有符合命名规则的文件\n    var fs = require('fs');\n    var path = require('path');\n\n    module.exports = function (gulp) {\n        fs.readdirSync(__dirname).filter(function (file) {\n            return (file.indexOf(\".\") !== 0) && (file.indexOf('Task') === 0);\n        }).forEach(function (file) {\n            var registerTask = require(path.join(__dirname, file));\n            registerTask(gulp);\n        });\n    };\n\n\n```\n\n# 建立TaskBuildDev.js(示例)\n```\n    const gulp = require('gulp');\n    const spritesmith = require('gulp.spritesmith');\n    const sass = require('gulp-sass');\n    const moment = require('moment');\n    const del = require('del');\n    const merge = require('merge-stream');\n    const paths = {\n        src: {\n            dir: './',\n            images: ['./web/statics/images/icons/*.png', './web/statics/images/large/*.png', './web/statics/images/login/*.png', './web/statics/images/saas_console/icons/*.png'],\n            sass: ['./web/statics/sass/**/*.scss'],\n            source: './web/**/*'\n        },\n        dev: {\n            dir: './',\n            images: './web/statics/images/',\n            sass: './web/statics/sass',\n            css: './web/statics/styles',\n            sprite: './web/statics/images/icons-*',\n        }\n    };\n    const imageName=formatName('icons.png');\n    //格式化名称 版本号\n    function formatName(name) {\n        var version = moment().format('MMDDHHmm');\n        var tmp = name.split('.');\n        return tmp[0] + '-' + version + '.' + tmp[1];\n    }\n    module.exports=function(gulp){\n        // 删除老版本雪碧图\n        function delSprite() {\n            return del(paths.dev.sprite);\n        }\n        // 编译saas\n        function compileSass() {\n            return gulp.src(paths.src.sass)\n                .pipe(sass().on('error', sass.logError))\n                .pipe(gulp.dest(paths.dev.css));\n        }\n        // 生成雪碧图\n        function sprite() {\n            var spriteData = gulp.src(paths.src.images)\n                .pipe(spritesmith({\n                    imgName:imageName,\n                    cssName: '_sprite.scss',\n                    cssSpritesheetName: 'icon',\n                    padding: 5,\n                    imgPath:'../images/'+imageName\n                }));\n            var imgStream = spriteData.img.pipe(gulp.dest(paths.dev.images));\n            var cssStream = spriteData.css.pipe(gulp.dest(paths.dev.sass));\n            return merge(imgStream, cssStream);\n        }\n        // 重新生成雪碧图\n        gulp.task('icons', gulp.series(\n            delSprite,\n            sprite\n        ));\n        // 编译sass\n        gulp.task('sass',gulp.series(compileSass));\n        // 生成雪碧图 并生成 saas\n        gulp.task('build_dev',gulp.series(\n            delSprite,\n            sprite,\n            compileSass\n        ));\n        // 监听sass\n        gulp.task('dev', () => {\n            gulp.watch(paths.src.sass, gulp.series(compileSass));\n        });\n    }\n```\n#建立TaskBuildWeb.js (示例)\n\n```\n    const gulp = require('gulp');\n    const spritesmith = require('gulp.spritesmith');\n    const sass = require('gulp-sass');\n    const moment = require('moment');\n    const del = require('del');\n    const replace = require('gulp-replace');\n    const merge = require('merge-stream');\n    const gulpif = require('gulp-if');\n    const uglifyjs = require('uglify-js');\n    const minifier = require('gulp-uglify/minifier')\n    const cleanCSS = require('gulp-clean-css');\n    const rename = require('gulp-rename');\n    require('gulp-grunt')(gulp);\n    const version = moment().format('MMDDHHmm');\n    const paths = {\n        src: {\n            dir: './',\n            images: ['./web/statics/images/icons/*.png', './web/statics/images/large/*.png', './web/statics/images/login/*.png', './web/statics/images/saas_console/icons/*.png'],\n            source: ['./web/**/*', '!./web/plugins/**/*'],\n            modules: './web/modules/**/*',\n            sprite: './web/statics/sass/_sprite.scss'\n        },\n        dist: {\n            dir: './dist',\n            tpl: ['./dist/web/modules/**/*.tpl', '!./dist/web/modules/page/account/**/*.tpl'],\n            cleanmodules: './dist/web/modules/**/*',\n            modules: './dist/web/modules',\n            base: './dist/web/modules/base/**/*.js',\n            css: ['./dist/web/statics/styles/**/*.css', '!./dist/web/statics/**/*.min.css'],\n            html: ['./dist/web/*.html'],\n            statics: [\n                './dist/web/statics/images/icons',\n                './dist/web/statics/images/large',\n                './dist/web/statics/images/login',\n                './dist/web/statics/sass',\n                './dist/web/tmp',\n                './dist/web/modules/view'\n            ],\n            others: ['./dist/web/statics/scripts/sha1.js', './dist/web/statics/scripts/sha1_worker.js'],\n            gif: './dist/web/statics/sass/_sprite_gif.scss',\n            sass: ['./dist/web/statics/sass/**/*.scss'],\n            styles: './dist/web/statics/styles'\n        },\n        tmp: {\n            dir: './dist/web/tmp',\n            base: './dist/web/tmp/modules/base',\n            modules: './dist/web/tmp/modules/**/*'\n        }\n    };\n    module.exports = function(gulp) {\n        // 复制modules\n        function copySource() {\n            return gulp.src(paths.src.source, {\n                base: paths.src.dir\n            }).pipe(gulp.dest(paths.dist.dir));\n        }\n\n        function copyBase() {\n            return gulp.src(paths.dist.base)\n                .pipe(gulp.dest(paths.tmp.base));\n        }\n\n\n        function replaceTpl() {\n            return gulp.src(paths.dist.tpl, {\n                    base: paths.dist.dir\n                }).pipe(replace(/\\\\/g, '\\\\\\\\'))\n                .pipe(gulp.dest(paths.dist.dir))\n        }\n        // 清除dist文件夹中的文件\n        function cleanDist() {\n            return del([paths.dist.dir]);\n        }\n        // 压缩js\n        function uglifyJS() {\n            return gulp.src(paths.tmp.modules)\n                .pipe(minifier({\n                    output:{\n                        quote_keys:true\n                    },\n                    compress:{\n                        screw_ie8:false\n                    }\n                }, uglifyjs))\n                .pipe(gulp.dest(paths.dist.modules));\n        }\n        // 压缩其他\n        function uglifyOthers() {\n            return gulp.src(paths.dist.others, {\n                    base: paths.dist.dir\n                })\n                .pipe(minifier({\n                    output:{\n                        quote_keys:true\n                    },\n                    compress:{\n                        screw_ie8:false\n                    }\n                }, uglifyjs))\n                .pipe(gulp.dest(paths.dist.dir))\n        }\n        // 压缩css\n        function uglifyCss() {\n            return gulp.src(paths.dist.css, {\n                    base: paths.dist.dir\n                })\n                .pipe(cleanCSS())\n                .pipe(gulp.dest(paths.dist.dir));\n        }\n        // 删除dist中没有压缩合并的modules\n        function cleanModules() {\n            return del([paths.dist.cleanmodules]);\n        }\n        //删除无用的静态资源\n        function cleanStatics() {\n            return del(paths.dist.statics);\n        }\n        //添加版本号\n        function addVersion() {\n            return gulp.src(paths.dist.html, {\n                    base: paths.dist.dir\n                })\n                .pipe(replace(/@@version/g, version))\n                .pipe(gulp.dest(paths.dist.dir));\n        }\n        // 支持IE\n        function createGif() {\n            return gulp.src(paths.src.sprite)\n                .pipe(replace(/.png/g, '.gif'))\n                .pipe(rename('web/statics/sass/_sprite_gif.scss'))\n                .pipe(gulp.dest(paths.dist.dir));\n        }\n        //删除\n        function cleanGif() {\n            return del(paths.dist.gif);\n        }\n\n        function compileSass() {\n            return gulp.src(paths.dist.sass)\n                .pipe(sass().on('error', sass.logError))\n                .pipe(gulp.dest(paths.dist.styles));\n        }\n        gulp.task('build_web', gulp.series(\n            cleanDist,\n            gulp.parallel('icons'),\n            copySource,\n            replaceTpl,\n            gulp.parallel('grunt-imagemagick-convert'),\n            gulp.parallel('grunt-transport:dist'),\n            gulp.parallel('grunt-concat'),\n            copyBase,\n            cleanModules,\n            cleanGif,\n            createGif,\n            compileSass,\n            uglifyJS,\n            uglifyOthers,\n            uglifyCss,\n            cleanStatics,\n            addVersion\n        ));\n        gulp.task('build', gulp.series(\n            gulp.parallel('build_web'),\n            gulp.parallel('copyWap', 'copyMobile')\n        ));\n    }\n\n```\n{% blockquote %}\n    可以将不同功能的任务拆分成多个文件。每个任务都享有自己的私有变量。\n    更容易扩展和维护。\n{% endblockquote%}","slug":"gulp","published":1,"updated":"2019-03-22T09:31:05.921Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtjvp8y5000nnwwf7d92yjwq","content":"<blockquote><p>如果项目太大,需要拆分任务，可能会导致gulpfile.js体积过大,难以维护。<br>为了解决这个问题，应将任务拆分到不同的文件中，即解耦。</p>\n</blockquote>\n<h1 id=\"安装gulp4-0\"><a href=\"#安装gulp4-0\" class=\"headerlink\" title=\"安装gulp4.0\"></a>安装gulp4.0</h1><blockquote><p>利用gulp.series控制串行任务<br>利用gulp.parallel控制并行任务<br>更好的利用node高并发的特点，更快的，明确的，进行构建</p>\n</blockquote>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"keyword\">install</span> gulpjs/gulp<span class=\"comment\">#4.0 -g</span></span><br><span class=\"line\">npm <span class=\"keyword\">install</span> gulpjs/gulp<span class=\"comment\">#4.0 --save-dev</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"创建gulpfile-js\"><a href=\"#创建gulpfile-js\" class=\"headerlink\" title=\"创建gulpfile.js\"></a>创建gulpfile.js</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//__dirname为当前目录</span></span><br><span class=\"line\"> <span class=\"comment\">//deep可配置,控制递归的次数</span></span><br><span class=\"line\"> <span class=\"comment\">//这段代码 会去自动加载本目录下的_tasks的index.js,传递gulp</span></span><br><span class=\"line\"> <span class=\"comment\">//执行gulp --tasks可列出所有任务列表</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> gulp=<span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> fs=<span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> path=<span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> deep=<span class=\"number\">3</span>;</span><br><span class=\"line\">run_tasks(<span class=\"string\">'_tasks'</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">run_tasks</span>(<span class=\"params\">tasks_path</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (--deep &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'something wrong in require tasks!'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    tasks_path=path.resolve(__dirname,tasks_path);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (fs.existsSync(tasks_path)) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">require</span>(tasks_path)(gulp)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        run_tasks(tasks_path);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"创建-tasks文件夹-并在该文件夹中创建index-js\"><a href=\"#创建-tasks文件夹-并在该文件夹中创建index-js\" class=\"headerlink\" title=\"创建_tasks文件夹,并在该文件夹中创建index.js\"></a>创建_tasks文件夹,并在该文件夹中创建index.js</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//index.js</span></span><br><span class=\"line\"><span class=\"comment\">//gulpfile执行即加载了该文件,并执行了改文件</span></span><br><span class=\"line\"><span class=\"comment\">//当前目录下所有符合命名规则(见正则)会被加载</span></span><br><span class=\"line\"><span class=\"comment\">//即gulpfile.js依赖了这个文件夹下所有符合命名规则的文件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">gulp</span>) </span>&#123;</span><br><span class=\"line\">    fs.readdirSync(__dirname).filter(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">file</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (file.indexOf(<span class=\"string\">\".\"</span>) !== <span class=\"number\">0</span>) &amp;&amp; (file.indexOf(<span class=\"string\">'Task'</span>) === <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;).forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">file</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> registerTask = <span class=\"built_in\">require</span>(path.join(__dirname, file));</span><br><span class=\"line\">        registerTask(gulp);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h1 id=\"建立TaskBuildDev-js-示例\"><a href=\"#建立TaskBuildDev-js-示例\" class=\"headerlink\" title=\"建立TaskBuildDev.js(示例)\"></a>建立TaskBuildDev.js(示例)</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> spritesmith = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp.spritesmith'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> sass = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-sass'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> moment = <span class=\"built_in\">require</span>(<span class=\"string\">'moment'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> del = <span class=\"built_in\">require</span>(<span class=\"string\">'del'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'merge-stream'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> paths = &#123;</span><br><span class=\"line\">    src: &#123;</span><br><span class=\"line\">        dir: <span class=\"string\">'./'</span>,</span><br><span class=\"line\">        images: [<span class=\"string\">'./web/statics/images/icons/*.png'</span>, <span class=\"string\">'./web/statics/images/large/*.png'</span>, <span class=\"string\">'./web/statics/images/login/*.png'</span>, <span class=\"string\">'./web/statics/images/saas_console/icons/*.png'</span>],</span><br><span class=\"line\">        sass: [<span class=\"string\">'./web/statics/sass/**/*.scss'</span>],</span><br><span class=\"line\">        source: <span class=\"string\">'./web/**/*'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    dev: &#123;</span><br><span class=\"line\">        dir: <span class=\"string\">'./'</span>,</span><br><span class=\"line\">        images: <span class=\"string\">'./web/statics/images/'</span>,</span><br><span class=\"line\">        sass: <span class=\"string\">'./web/statics/sass'</span>,</span><br><span class=\"line\">        css: <span class=\"string\">'./web/statics/styles'</span>,</span><br><span class=\"line\">        sprite: <span class=\"string\">'./web/statics/images/icons-*'</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> imageName=formatName(<span class=\"string\">'icons.png'</span>);</span><br><span class=\"line\"><span class=\"comment\">//格式化名称 版本号</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">formatName</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> version = moment().format(<span class=\"string\">'MMDDHHmm'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> tmp = name.split(<span class=\"string\">'.'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> tmp[<span class=\"number\">0</span>] + <span class=\"string\">'-'</span> + version + <span class=\"string\">'.'</span> + tmp[<span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">gulp</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 删除老版本雪碧图</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">delSprite</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> del(paths.dev.sprite);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 编译saas</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">compileSass</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> gulp.src(paths.src.sass)</span><br><span class=\"line\">            .pipe(sass().on(<span class=\"string\">'error'</span>, sass.logError))</span><br><span class=\"line\">            .pipe(gulp.dest(paths.dev.css));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 生成雪碧图</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sprite</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> spriteData = gulp.src(paths.src.images)</span><br><span class=\"line\">            .pipe(spritesmith(&#123;</span><br><span class=\"line\">                imgName:imageName,</span><br><span class=\"line\">                cssName: <span class=\"string\">'_sprite.scss'</span>,</span><br><span class=\"line\">                cssSpritesheetName: <span class=\"string\">'icon'</span>,</span><br><span class=\"line\">                padding: <span class=\"number\">5</span>,</span><br><span class=\"line\">                imgPath:<span class=\"string\">'../images/'</span>+imageName</span><br><span class=\"line\">            &#125;));</span><br><span class=\"line\">        <span class=\"keyword\">var</span> imgStream = spriteData.img.pipe(gulp.dest(paths.dev.images));</span><br><span class=\"line\">        <span class=\"keyword\">var</span> cssStream = spriteData.css.pipe(gulp.dest(paths.dev.sass));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> merge(imgStream, cssStream);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 重新生成雪碧图</span></span><br><span class=\"line\">    gulp.task(<span class=\"string\">'icons'</span>, gulp.series(</span><br><span class=\"line\">        delSprite,</span><br><span class=\"line\">        sprite</span><br><span class=\"line\">    ));</span><br><span class=\"line\">    <span class=\"comment\">// 编译sass</span></span><br><span class=\"line\">    gulp.task(<span class=\"string\">'sass'</span>,gulp.series(compileSass));</span><br><span class=\"line\">    <span class=\"comment\">// 生成雪碧图 并生成 saas</span></span><br><span class=\"line\">    gulp.task(<span class=\"string\">'build_dev'</span>,gulp.series(</span><br><span class=\"line\">        delSprite,</span><br><span class=\"line\">        sprite,</span><br><span class=\"line\">        compileSass</span><br><span class=\"line\">    ));</span><br><span class=\"line\">    <span class=\"comment\">// 监听sass</span></span><br><span class=\"line\">    gulp.task(<span class=\"string\">'dev'</span>, () =&gt; &#123;</span><br><span class=\"line\">        gulp.watch(paths.src.sass, gulp.series(compileSass));</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>#建立TaskBuildWeb.js (示例)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> spritesmith = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp.spritesmith'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> sass = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-sass'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> moment = <span class=\"built_in\">require</span>(<span class=\"string\">'moment'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> del = <span class=\"built_in\">require</span>(<span class=\"string\">'del'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> replace = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-replace'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'merge-stream'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> gulpif = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-if'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> uglifyjs = <span class=\"built_in\">require</span>(<span class=\"string\">'uglify-js'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> minifier = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify/minifier'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> cleanCSS = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-clean-css'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> rename = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-rename'</span>);</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'gulp-grunt'</span>)(gulp);</span><br><span class=\"line\"><span class=\"keyword\">const</span> version = moment().format(<span class=\"string\">'MMDDHHmm'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> paths = &#123;</span><br><span class=\"line\">    src: &#123;</span><br><span class=\"line\">        dir: <span class=\"string\">'./'</span>,</span><br><span class=\"line\">        images: [<span class=\"string\">'./web/statics/images/icons/*.png'</span>, <span class=\"string\">'./web/statics/images/large/*.png'</span>, <span class=\"string\">'./web/statics/images/login/*.png'</span>, <span class=\"string\">'./web/statics/images/saas_console/icons/*.png'</span>],</span><br><span class=\"line\">        source: [<span class=\"string\">'./web/**/*'</span>, <span class=\"string\">'!./web/plugins/**/*'</span>],</span><br><span class=\"line\">        modules: <span class=\"string\">'./web/modules/**/*'</span>,</span><br><span class=\"line\">        sprite: <span class=\"string\">'./web/statics/sass/_sprite.scss'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    dist: &#123;</span><br><span class=\"line\">        dir: <span class=\"string\">'./dist'</span>,</span><br><span class=\"line\">        tpl: [<span class=\"string\">'./dist/web/modules/**/*.tpl'</span>, <span class=\"string\">'!./dist/web/modules/page/account/**/*.tpl'</span>],</span><br><span class=\"line\">        cleanmodules: <span class=\"string\">'./dist/web/modules/**/*'</span>,</span><br><span class=\"line\">        modules: <span class=\"string\">'./dist/web/modules'</span>,</span><br><span class=\"line\">        base: <span class=\"string\">'./dist/web/modules/base/**/*.js'</span>,</span><br><span class=\"line\">        css: [<span class=\"string\">'./dist/web/statics/styles/**/*.css'</span>, <span class=\"string\">'!./dist/web/statics/**/*.min.css'</span>],</span><br><span class=\"line\">        html: [<span class=\"string\">'./dist/web/*.html'</span>],</span><br><span class=\"line\">        statics: [</span><br><span class=\"line\">            <span class=\"string\">'./dist/web/statics/images/icons'</span>,</span><br><span class=\"line\">            <span class=\"string\">'./dist/web/statics/images/large'</span>,</span><br><span class=\"line\">            <span class=\"string\">'./dist/web/statics/images/login'</span>,</span><br><span class=\"line\">            <span class=\"string\">'./dist/web/statics/sass'</span>,</span><br><span class=\"line\">            <span class=\"string\">'./dist/web/tmp'</span>,</span><br><span class=\"line\">            <span class=\"string\">'./dist/web/modules/view'</span></span><br><span class=\"line\">        ],</span><br><span class=\"line\">        others: [<span class=\"string\">'./dist/web/statics/scripts/sha1.js'</span>, <span class=\"string\">'./dist/web/statics/scripts/sha1_worker.js'</span>],</span><br><span class=\"line\">        gif: <span class=\"string\">'./dist/web/statics/sass/_sprite_gif.scss'</span>,</span><br><span class=\"line\">        sass: [<span class=\"string\">'./dist/web/statics/sass/**/*.scss'</span>],</span><br><span class=\"line\">        styles: <span class=\"string\">'./dist/web/statics/styles'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    tmp: &#123;</span><br><span class=\"line\">        dir: <span class=\"string\">'./dist/web/tmp'</span>,</span><br><span class=\"line\">        base: <span class=\"string\">'./dist/web/tmp/modules/base'</span>,</span><br><span class=\"line\">        modules: <span class=\"string\">'./dist/web/tmp/modules/**/*'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">gulp</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 复制modules</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">copySource</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> gulp.src(paths.src.source, &#123;</span><br><span class=\"line\">            base: paths.src.dir</span><br><span class=\"line\">        &#125;).pipe(gulp.dest(paths.dist.dir));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">copyBase</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> gulp.src(paths.dist.base)</span><br><span class=\"line\">            .pipe(gulp.dest(paths.tmp.base));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">replaceTpl</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> gulp.src(paths.dist.tpl, &#123;</span><br><span class=\"line\">                base: paths.dist.dir</span><br><span class=\"line\">            &#125;).pipe(replace(<span class=\"regexp\">/\\\\/g</span>, <span class=\"string\">'\\\\\\\\'</span>))</span><br><span class=\"line\">            .pipe(gulp.dest(paths.dist.dir))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 清除dist文件夹中的文件</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cleanDist</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> del([paths.dist.dir]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 压缩js</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">uglifyJS</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> gulp.src(paths.tmp.modules)</span><br><span class=\"line\">            .pipe(minifier(&#123;</span><br><span class=\"line\">                output:&#123;</span><br><span class=\"line\">                    quote_keys:<span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                compress:&#123;</span><br><span class=\"line\">                    screw_ie8:<span class=\"literal\">false</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;, uglifyjs))</span><br><span class=\"line\">            .pipe(gulp.dest(paths.dist.modules));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 压缩其他</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">uglifyOthers</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> gulp.src(paths.dist.others, &#123;</span><br><span class=\"line\">                base: paths.dist.dir</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            .pipe(minifier(&#123;</span><br><span class=\"line\">                output:&#123;</span><br><span class=\"line\">                    quote_keys:<span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                compress:&#123;</span><br><span class=\"line\">                    screw_ie8:<span class=\"literal\">false</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;, uglifyjs))</span><br><span class=\"line\">            .pipe(gulp.dest(paths.dist.dir))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 压缩css</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">uglifyCss</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> gulp.src(paths.dist.css, &#123;</span><br><span class=\"line\">                base: paths.dist.dir</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            .pipe(cleanCSS())</span><br><span class=\"line\">            .pipe(gulp.dest(paths.dist.dir));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 删除dist中没有压缩合并的modules</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cleanModules</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> del([paths.dist.cleanmodules]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//删除无用的静态资源</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cleanStatics</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> del(paths.dist.statics);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//添加版本号</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addVersion</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> gulp.src(paths.dist.html, &#123;</span><br><span class=\"line\">                base: paths.dist.dir</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            .pipe(replace(<span class=\"regexp\">/@@version/g</span>, version))</span><br><span class=\"line\">            .pipe(gulp.dest(paths.dist.dir));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 支持IE</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createGif</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> gulp.src(paths.src.sprite)</span><br><span class=\"line\">            .pipe(replace(<span class=\"regexp\">/.png/g</span>, <span class=\"string\">'.gif'</span>))</span><br><span class=\"line\">            .pipe(rename(<span class=\"string\">'web/statics/sass/_sprite_gif.scss'</span>))</span><br><span class=\"line\">            .pipe(gulp.dest(paths.dist.dir));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//删除</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cleanGif</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> del(paths.dist.gif);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">compileSass</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> gulp.src(paths.dist.sass)</span><br><span class=\"line\">            .pipe(sass().on(<span class=\"string\">'error'</span>, sass.logError))</span><br><span class=\"line\">            .pipe(gulp.dest(paths.dist.styles));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    gulp.task(<span class=\"string\">'build_web'</span>, gulp.series(</span><br><span class=\"line\">        cleanDist,</span><br><span class=\"line\">        gulp.parallel(<span class=\"string\">'icons'</span>),</span><br><span class=\"line\">        copySource,</span><br><span class=\"line\">        replaceTpl,</span><br><span class=\"line\">        gulp.parallel(<span class=\"string\">'grunt-imagemagick-convert'</span>),</span><br><span class=\"line\">        gulp.parallel(<span class=\"string\">'grunt-transport:dist'</span>),</span><br><span class=\"line\">        gulp.parallel(<span class=\"string\">'grunt-concat'</span>),</span><br><span class=\"line\">        copyBase,</span><br><span class=\"line\">        cleanModules,</span><br><span class=\"line\">        cleanGif,</span><br><span class=\"line\">        createGif,</span><br><span class=\"line\">        compileSass,</span><br><span class=\"line\">        uglifyJS,</span><br><span class=\"line\">        uglifyOthers,</span><br><span class=\"line\">        uglifyCss,</span><br><span class=\"line\">        cleanStatics,</span><br><span class=\"line\">        addVersion</span><br><span class=\"line\">    ));</span><br><span class=\"line\">    gulp.task(<span class=\"string\">'build'</span>, gulp.series(</span><br><span class=\"line\">        gulp.parallel(<span class=\"string\">'build_web'</span>),</span><br><span class=\"line\">        gulp.parallel(<span class=\"string\">'copyWap'</span>, <span class=\"string\">'copyMobile'</span>)</span><br><span class=\"line\">    ));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>可以将不同功能的任务拆分成多个文件。每个任务都享有自己的私有变量。<br>更容易扩展和维护。</p>\n</blockquote>","site":{"data":{}},"excerpt":"","more":"<blockquote><p>如果项目太大,需要拆分任务，可能会导致gulpfile.js体积过大,难以维护。<br>为了解决这个问题，应将任务拆分到不同的文件中，即解耦。</p>\n</blockquote>\n<h1 id=\"安装gulp4-0\"><a href=\"#安装gulp4-0\" class=\"headerlink\" title=\"安装gulp4.0\"></a>安装gulp4.0</h1><blockquote><p>利用gulp.series控制串行任务<br>利用gulp.parallel控制并行任务<br>更好的利用node高并发的特点，更快的，明确的，进行构建</p>\n</blockquote>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"keyword\">install</span> gulpjs/gulp<span class=\"comment\">#4.0 -g</span></span><br><span class=\"line\">npm <span class=\"keyword\">install</span> gulpjs/gulp<span class=\"comment\">#4.0 --save-dev</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"创建gulpfile-js\"><a href=\"#创建gulpfile-js\" class=\"headerlink\" title=\"创建gulpfile.js\"></a>创建gulpfile.js</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//__dirname为当前目录</span></span><br><span class=\"line\"> <span class=\"comment\">//deep可配置,控制递归的次数</span></span><br><span class=\"line\"> <span class=\"comment\">//这段代码 会去自动加载本目录下的_tasks的index.js,传递gulp</span></span><br><span class=\"line\"> <span class=\"comment\">//执行gulp --tasks可列出所有任务列表</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> gulp=<span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> fs=<span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> path=<span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> deep=<span class=\"number\">3</span>;</span><br><span class=\"line\">run_tasks(<span class=\"string\">'_tasks'</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">run_tasks</span>(<span class=\"params\">tasks_path</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (--deep &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'something wrong in require tasks!'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    tasks_path=path.resolve(__dirname,tasks_path);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (fs.existsSync(tasks_path)) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">require</span>(tasks_path)(gulp)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        run_tasks(tasks_path);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"创建-tasks文件夹-并在该文件夹中创建index-js\"><a href=\"#创建-tasks文件夹-并在该文件夹中创建index-js\" class=\"headerlink\" title=\"创建_tasks文件夹,并在该文件夹中创建index.js\"></a>创建_tasks文件夹,并在该文件夹中创建index.js</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//index.js</span></span><br><span class=\"line\"><span class=\"comment\">//gulpfile执行即加载了该文件,并执行了改文件</span></span><br><span class=\"line\"><span class=\"comment\">//当前目录下所有符合命名规则(见正则)会被加载</span></span><br><span class=\"line\"><span class=\"comment\">//即gulpfile.js依赖了这个文件夹下所有符合命名规则的文件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">gulp</span>) </span>&#123;</span><br><span class=\"line\">    fs.readdirSync(__dirname).filter(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">file</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (file.indexOf(<span class=\"string\">\".\"</span>) !== <span class=\"number\">0</span>) &amp;&amp; (file.indexOf(<span class=\"string\">'Task'</span>) === <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;).forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">file</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> registerTask = <span class=\"built_in\">require</span>(path.join(__dirname, file));</span><br><span class=\"line\">        registerTask(gulp);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h1 id=\"建立TaskBuildDev-js-示例\"><a href=\"#建立TaskBuildDev-js-示例\" class=\"headerlink\" title=\"建立TaskBuildDev.js(示例)\"></a>建立TaskBuildDev.js(示例)</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> spritesmith = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp.spritesmith'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> sass = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-sass'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> moment = <span class=\"built_in\">require</span>(<span class=\"string\">'moment'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> del = <span class=\"built_in\">require</span>(<span class=\"string\">'del'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'merge-stream'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> paths = &#123;</span><br><span class=\"line\">    src: &#123;</span><br><span class=\"line\">        dir: <span class=\"string\">'./'</span>,</span><br><span class=\"line\">        images: [<span class=\"string\">'./web/statics/images/icons/*.png'</span>, <span class=\"string\">'./web/statics/images/large/*.png'</span>, <span class=\"string\">'./web/statics/images/login/*.png'</span>, <span class=\"string\">'./web/statics/images/saas_console/icons/*.png'</span>],</span><br><span class=\"line\">        sass: [<span class=\"string\">'./web/statics/sass/**/*.scss'</span>],</span><br><span class=\"line\">        source: <span class=\"string\">'./web/**/*'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    dev: &#123;</span><br><span class=\"line\">        dir: <span class=\"string\">'./'</span>,</span><br><span class=\"line\">        images: <span class=\"string\">'./web/statics/images/'</span>,</span><br><span class=\"line\">        sass: <span class=\"string\">'./web/statics/sass'</span>,</span><br><span class=\"line\">        css: <span class=\"string\">'./web/statics/styles'</span>,</span><br><span class=\"line\">        sprite: <span class=\"string\">'./web/statics/images/icons-*'</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> imageName=formatName(<span class=\"string\">'icons.png'</span>);</span><br><span class=\"line\"><span class=\"comment\">//格式化名称 版本号</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">formatName</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> version = moment().format(<span class=\"string\">'MMDDHHmm'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> tmp = name.split(<span class=\"string\">'.'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> tmp[<span class=\"number\">0</span>] + <span class=\"string\">'-'</span> + version + <span class=\"string\">'.'</span> + tmp[<span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">gulp</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 删除老版本雪碧图</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">delSprite</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> del(paths.dev.sprite);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 编译saas</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">compileSass</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> gulp.src(paths.src.sass)</span><br><span class=\"line\">            .pipe(sass().on(<span class=\"string\">'error'</span>, sass.logError))</span><br><span class=\"line\">            .pipe(gulp.dest(paths.dev.css));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 生成雪碧图</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sprite</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> spriteData = gulp.src(paths.src.images)</span><br><span class=\"line\">            .pipe(spritesmith(&#123;</span><br><span class=\"line\">                imgName:imageName,</span><br><span class=\"line\">                cssName: <span class=\"string\">'_sprite.scss'</span>,</span><br><span class=\"line\">                cssSpritesheetName: <span class=\"string\">'icon'</span>,</span><br><span class=\"line\">                padding: <span class=\"number\">5</span>,</span><br><span class=\"line\">                imgPath:<span class=\"string\">'../images/'</span>+imageName</span><br><span class=\"line\">            &#125;));</span><br><span class=\"line\">        <span class=\"keyword\">var</span> imgStream = spriteData.img.pipe(gulp.dest(paths.dev.images));</span><br><span class=\"line\">        <span class=\"keyword\">var</span> cssStream = spriteData.css.pipe(gulp.dest(paths.dev.sass));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> merge(imgStream, cssStream);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 重新生成雪碧图</span></span><br><span class=\"line\">    gulp.task(<span class=\"string\">'icons'</span>, gulp.series(</span><br><span class=\"line\">        delSprite,</span><br><span class=\"line\">        sprite</span><br><span class=\"line\">    ));</span><br><span class=\"line\">    <span class=\"comment\">// 编译sass</span></span><br><span class=\"line\">    gulp.task(<span class=\"string\">'sass'</span>,gulp.series(compileSass));</span><br><span class=\"line\">    <span class=\"comment\">// 生成雪碧图 并生成 saas</span></span><br><span class=\"line\">    gulp.task(<span class=\"string\">'build_dev'</span>,gulp.series(</span><br><span class=\"line\">        delSprite,</span><br><span class=\"line\">        sprite,</span><br><span class=\"line\">        compileSass</span><br><span class=\"line\">    ));</span><br><span class=\"line\">    <span class=\"comment\">// 监听sass</span></span><br><span class=\"line\">    gulp.task(<span class=\"string\">'dev'</span>, () =&gt; &#123;</span><br><span class=\"line\">        gulp.watch(paths.src.sass, gulp.series(compileSass));</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>#建立TaskBuildWeb.js (示例)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> spritesmith = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp.spritesmith'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> sass = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-sass'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> moment = <span class=\"built_in\">require</span>(<span class=\"string\">'moment'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> del = <span class=\"built_in\">require</span>(<span class=\"string\">'del'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> replace = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-replace'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'merge-stream'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> gulpif = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-if'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> uglifyjs = <span class=\"built_in\">require</span>(<span class=\"string\">'uglify-js'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> minifier = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify/minifier'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> cleanCSS = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-clean-css'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> rename = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-rename'</span>);</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'gulp-grunt'</span>)(gulp);</span><br><span class=\"line\"><span class=\"keyword\">const</span> version = moment().format(<span class=\"string\">'MMDDHHmm'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> paths = &#123;</span><br><span class=\"line\">    src: &#123;</span><br><span class=\"line\">        dir: <span class=\"string\">'./'</span>,</span><br><span class=\"line\">        images: [<span class=\"string\">'./web/statics/images/icons/*.png'</span>, <span class=\"string\">'./web/statics/images/large/*.png'</span>, <span class=\"string\">'./web/statics/images/login/*.png'</span>, <span class=\"string\">'./web/statics/images/saas_console/icons/*.png'</span>],</span><br><span class=\"line\">        source: [<span class=\"string\">'./web/**/*'</span>, <span class=\"string\">'!./web/plugins/**/*'</span>],</span><br><span class=\"line\">        modules: <span class=\"string\">'./web/modules/**/*'</span>,</span><br><span class=\"line\">        sprite: <span class=\"string\">'./web/statics/sass/_sprite.scss'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    dist: &#123;</span><br><span class=\"line\">        dir: <span class=\"string\">'./dist'</span>,</span><br><span class=\"line\">        tpl: [<span class=\"string\">'./dist/web/modules/**/*.tpl'</span>, <span class=\"string\">'!./dist/web/modules/page/account/**/*.tpl'</span>],</span><br><span class=\"line\">        cleanmodules: <span class=\"string\">'./dist/web/modules/**/*'</span>,</span><br><span class=\"line\">        modules: <span class=\"string\">'./dist/web/modules'</span>,</span><br><span class=\"line\">        base: <span class=\"string\">'./dist/web/modules/base/**/*.js'</span>,</span><br><span class=\"line\">        css: [<span class=\"string\">'./dist/web/statics/styles/**/*.css'</span>, <span class=\"string\">'!./dist/web/statics/**/*.min.css'</span>],</span><br><span class=\"line\">        html: [<span class=\"string\">'./dist/web/*.html'</span>],</span><br><span class=\"line\">        statics: [</span><br><span class=\"line\">            <span class=\"string\">'./dist/web/statics/images/icons'</span>,</span><br><span class=\"line\">            <span class=\"string\">'./dist/web/statics/images/large'</span>,</span><br><span class=\"line\">            <span class=\"string\">'./dist/web/statics/images/login'</span>,</span><br><span class=\"line\">            <span class=\"string\">'./dist/web/statics/sass'</span>,</span><br><span class=\"line\">            <span class=\"string\">'./dist/web/tmp'</span>,</span><br><span class=\"line\">            <span class=\"string\">'./dist/web/modules/view'</span></span><br><span class=\"line\">        ],</span><br><span class=\"line\">        others: [<span class=\"string\">'./dist/web/statics/scripts/sha1.js'</span>, <span class=\"string\">'./dist/web/statics/scripts/sha1_worker.js'</span>],</span><br><span class=\"line\">        gif: <span class=\"string\">'./dist/web/statics/sass/_sprite_gif.scss'</span>,</span><br><span class=\"line\">        sass: [<span class=\"string\">'./dist/web/statics/sass/**/*.scss'</span>],</span><br><span class=\"line\">        styles: <span class=\"string\">'./dist/web/statics/styles'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    tmp: &#123;</span><br><span class=\"line\">        dir: <span class=\"string\">'./dist/web/tmp'</span>,</span><br><span class=\"line\">        base: <span class=\"string\">'./dist/web/tmp/modules/base'</span>,</span><br><span class=\"line\">        modules: <span class=\"string\">'./dist/web/tmp/modules/**/*'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">gulp</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 复制modules</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">copySource</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> gulp.src(paths.src.source, &#123;</span><br><span class=\"line\">            base: paths.src.dir</span><br><span class=\"line\">        &#125;).pipe(gulp.dest(paths.dist.dir));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">copyBase</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> gulp.src(paths.dist.base)</span><br><span class=\"line\">            .pipe(gulp.dest(paths.tmp.base));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">replaceTpl</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> gulp.src(paths.dist.tpl, &#123;</span><br><span class=\"line\">                base: paths.dist.dir</span><br><span class=\"line\">            &#125;).pipe(replace(<span class=\"regexp\">/\\\\/g</span>, <span class=\"string\">'\\\\\\\\'</span>))</span><br><span class=\"line\">            .pipe(gulp.dest(paths.dist.dir))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 清除dist文件夹中的文件</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cleanDist</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> del([paths.dist.dir]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 压缩js</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">uglifyJS</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> gulp.src(paths.tmp.modules)</span><br><span class=\"line\">            .pipe(minifier(&#123;</span><br><span class=\"line\">                output:&#123;</span><br><span class=\"line\">                    quote_keys:<span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                compress:&#123;</span><br><span class=\"line\">                    screw_ie8:<span class=\"literal\">false</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;, uglifyjs))</span><br><span class=\"line\">            .pipe(gulp.dest(paths.dist.modules));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 压缩其他</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">uglifyOthers</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> gulp.src(paths.dist.others, &#123;</span><br><span class=\"line\">                base: paths.dist.dir</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            .pipe(minifier(&#123;</span><br><span class=\"line\">                output:&#123;</span><br><span class=\"line\">                    quote_keys:<span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                compress:&#123;</span><br><span class=\"line\">                    screw_ie8:<span class=\"literal\">false</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;, uglifyjs))</span><br><span class=\"line\">            .pipe(gulp.dest(paths.dist.dir))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 压缩css</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">uglifyCss</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> gulp.src(paths.dist.css, &#123;</span><br><span class=\"line\">                base: paths.dist.dir</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            .pipe(cleanCSS())</span><br><span class=\"line\">            .pipe(gulp.dest(paths.dist.dir));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 删除dist中没有压缩合并的modules</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cleanModules</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> del([paths.dist.cleanmodules]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//删除无用的静态资源</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cleanStatics</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> del(paths.dist.statics);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//添加版本号</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addVersion</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> gulp.src(paths.dist.html, &#123;</span><br><span class=\"line\">                base: paths.dist.dir</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            .pipe(replace(<span class=\"regexp\">/@@version/g</span>, version))</span><br><span class=\"line\">            .pipe(gulp.dest(paths.dist.dir));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 支持IE</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createGif</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> gulp.src(paths.src.sprite)</span><br><span class=\"line\">            .pipe(replace(<span class=\"regexp\">/.png/g</span>, <span class=\"string\">'.gif'</span>))</span><br><span class=\"line\">            .pipe(rename(<span class=\"string\">'web/statics/sass/_sprite_gif.scss'</span>))</span><br><span class=\"line\">            .pipe(gulp.dest(paths.dist.dir));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//删除</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cleanGif</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> del(paths.dist.gif);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">compileSass</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> gulp.src(paths.dist.sass)</span><br><span class=\"line\">            .pipe(sass().on(<span class=\"string\">'error'</span>, sass.logError))</span><br><span class=\"line\">            .pipe(gulp.dest(paths.dist.styles));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    gulp.task(<span class=\"string\">'build_web'</span>, gulp.series(</span><br><span class=\"line\">        cleanDist,</span><br><span class=\"line\">        gulp.parallel(<span class=\"string\">'icons'</span>),</span><br><span class=\"line\">        copySource,</span><br><span class=\"line\">        replaceTpl,</span><br><span class=\"line\">        gulp.parallel(<span class=\"string\">'grunt-imagemagick-convert'</span>),</span><br><span class=\"line\">        gulp.parallel(<span class=\"string\">'grunt-transport:dist'</span>),</span><br><span class=\"line\">        gulp.parallel(<span class=\"string\">'grunt-concat'</span>),</span><br><span class=\"line\">        copyBase,</span><br><span class=\"line\">        cleanModules,</span><br><span class=\"line\">        cleanGif,</span><br><span class=\"line\">        createGif,</span><br><span class=\"line\">        compileSass,</span><br><span class=\"line\">        uglifyJS,</span><br><span class=\"line\">        uglifyOthers,</span><br><span class=\"line\">        uglifyCss,</span><br><span class=\"line\">        cleanStatics,</span><br><span class=\"line\">        addVersion</span><br><span class=\"line\">    ));</span><br><span class=\"line\">    gulp.task(<span class=\"string\">'build'</span>, gulp.series(</span><br><span class=\"line\">        gulp.parallel(<span class=\"string\">'build_web'</span>),</span><br><span class=\"line\">        gulp.parallel(<span class=\"string\">'copyWap'</span>, <span class=\"string\">'copyMobile'</span>)</span><br><span class=\"line\">    ));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><p>可以将不同功能的任务拆分成多个文件。每个任务都享有自己的私有变量。<br>更容易扩展和维护。</p>\n</blockquote>"}],"PostAsset":[{"_id":"source/_posts/easyNodeImgServer/http.jpg","slug":"http.jpg","post":"cjtjvp8w70002nwwfx2qe1j8w","modified":1,"renderable":0},{"_id":"source/_posts/electron/tree.png","post":"cjtjvp8we0006nwwfnm3hq9b9","slug":"tree.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cjtjvp8vx0000nwwfcqq5zjea","category_id":"cjtjvp8wb0004nwwf3zfxh40s","_id":"cjtjvp8wp000dnwwfiui39rol"},{"post_id":"cjtjvp8w70002nwwfx2qe1j8w","category_id":"cjtjvp8wb0004nwwf3zfxh40s","_id":"cjtjvp8ws000hnwwfsp8d2r42"},{"post_id":"cjtjvp8we0006nwwfnm3hq9b9","category_id":"cjtjvp8wb0004nwwf3zfxh40s","_id":"cjtjvp8wu000knwwft219prdo"},{"post_id":"cjtjvp8wh0008nwwfmyefxioy","category_id":"cjtjvp8ws000gnwwfaerf6la9","_id":"cjtjvp8wv000mnwwfp3gs35yi"},{"post_id":"cjtjvp8y5000nnwwf7d92yjwq","category_id":"cjtjvp8ws000gnwwfaerf6la9","_id":"cjtjvp8y8000pnwwfp4yuhdau"}],"PostTag":[{"post_id":"cjtjvp8vx0000nwwfcqq5zjea","tag_id":"cjtjvp8wd0005nwwf4tmovyam","_id":"cjtjvp8wm000bnwwf48j014wa"},{"post_id":"cjtjvp8w70002nwwfx2qe1j8w","tag_id":"cjtjvp8wj000anwwf1i88cf5p","_id":"cjtjvp8wr000fnwwfwmu7s0fq"},{"post_id":"cjtjvp8we0006nwwfnm3hq9b9","tag_id":"cjtjvp8wq000enwwfoiim0ebg","_id":"cjtjvp8wt000jnwwfxo4r60b5"},{"post_id":"cjtjvp8wh0008nwwfmyefxioy","tag_id":"cjtjvp8wt000inwwf1zr4kbvg","_id":"cjtjvp8wv000lnwwfwiv48ysy"},{"post_id":"cjtjvp8y5000nnwwf7d92yjwq","tag_id":"cjtjvp8y7000onwwfhhnmten0","_id":"cjtjvp8y9000qnwwfk6qqiqck"}],"Tag":[{"name":"爬虫","_id":"cjtjvp8wd0005nwwf4tmovyam"},{"name":"服务器","_id":"cjtjvp8wj000anwwf1i88cf5p"},{"name":"桌面应用","_id":"cjtjvp8wq000enwwfoiim0ebg"},{"name":"uglify.js","_id":"cjtjvp8wt000inwwf1zr4kbvg"},{"name":"gulp","_id":"cjtjvp8y7000onwwfhhnmten0"}]}}